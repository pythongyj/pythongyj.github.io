<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>长情</title>
  
  <subtitle>梦幻人生</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.blog.geyunjie.com/"/>
  <updated>2020-07-08T08:27:28.587Z</updated>
  <id>http://www.blog.geyunjie.com/</id>
  
  <author>
    <name>Yunjie Ge</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>nuxt-i18n 国际化</title>
    <link href="http://www.blog.geyunjie.com/2020/07/07/nuxt-i18n/"/>
    <id>http://www.blog.geyunjie.com/2020/07/07/nuxt-i18n/</id>
    <published>2020-07-07T14:54:07.000Z</published>
    <updated>2020-07-08T08:27:28.587Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>​    由于本人的能力有限，如若有说得做的不对的地方，还望指出。当然，如若你有更好的方法，或者更优解，还望不吝赐教。</p></blockquote><h3 id="1、需求"><a href="#1、需求" class="headerlink" title="1、需求"></a>1、需求</h3><blockquote><p>根据需求，现在需要做一个服务端渲染的PC网站。SSR</p><p>技术选型：Vue Vue-i18n  Nuxt.js  elementUI</p></blockquote><h3 id="2、对于Vue-i8n在Nuxt-js中的使用"><a href="#2、对于Vue-i8n在Nuxt-js中的使用" class="headerlink" title="2、对于Vue-i8n在Nuxt.js中的使用"></a>2、对于Vue-i8n在Nuxt.js中的使用</h3><blockquote><p>首先说一下，nuxt.js和我们之前做的SPA单页面应用不一样，做国际化也不一样，之前已经写过在SPA中如何使用国际化，现在再写一下在SSR中如何使用国际化</p></blockquote><h3 id="3、安装vue-i18n"><a href="#3、安装vue-i18n" class="headerlink" title="3、安装vue-i18n"></a>3、安装vue-i18n</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">npm install vue-i18n --save</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">yarn add vue-i18n --save</span></pre></td></tr></table></figure><h3 id="4、在nuxt中引入vue-i18n"><a href="#4、在nuxt中引入vue-i18n" class="headerlink" title="4、在nuxt中引入vue-i18n"></a>4、在nuxt中引入vue-i18n</h3><blockquote><p>在plugins文件夹下创建一个i18n.js文件，并写入如下代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> VueI18n <span class="keyword">from</span> <span class="string">'vue-i18n'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">Vue.use(VueI18n)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> (&#123; app, store &#125;) =&gt; &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  app.i18n = <span class="keyword">new</span> VueI18n(&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    locale: store.state.locale,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    fallbackLocale: <span class="string">'zh-CN'</span>, <span class="comment">// 我这里默认语言为中文</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    messages: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">      <span class="string">'en-US'</span>: <span class="built_in">require</span>(<span class="string">'@/locales/en-US.json'</span>),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">      <span class="string">'zh-CN'</span>: <span class="built_in">require</span>(<span class="string">'@/locales/zh-CN.json'</span>),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">  &#125;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">  app.i18n.path = <span class="function">(<span class="params">link</span>) =&gt;</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">// 如果是默认语言，就省略</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span> (app.i18n.locale === app.i18n.fallbackLocale) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">      <span class="keyword">return</span> <span class="string">`/<span class="subst">$&#123;link&#125;</span>`</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> <span class="string">`/<span class="subst">$&#123;app.i18n.locale&#125;</span>/<span class="subst">$&#123;link&#125;</span>`</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></blockquote><h3 id="5、在vuex中保存语言的状态"><a href="#5、在vuex中保存语言的状态" class="headerlink" title="5、在vuex中保存语言的状态"></a>5、在vuex中保存语言的状态</h3><blockquote><p>在store页面下创建一个index.js文件</p><p>注意：</p><p>​    nuxt.js中如果想要使用vuex的模块化功能，需要使用如下方法，nuxt会自动生成模块化的vuex。</p><p>​    如果不实用模块化，则和vuex的使用没有任何区别</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> state = <span class="function"><span class="params">()</span> =&gt;</span> (&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  locales: [<span class="string">'zh-CN'</span>, <span class="string">'en-US'</span>],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  locale: <span class="string">''</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&#125;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> mutations = &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">// 此处为设置locale</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  SET_LANG(state, locale) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span> (state.locales.includes(locale)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">      state.locale = locale</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></blockquote><h3 id="6、在middleware文件夹下新建i18n-js文件用来控制语言的切换"><a href="#6、在middleware文件夹下新建i18n-js文件用来控制语言的切换" class="headerlink" title="6、在middleware文件夹下新建i18n.js文件用来控制语言的切换"></a>6、在middleware文件夹下新建i18n.js文件用来控制语言的切换</h3><blockquote><p>middleware中间件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="function"><span class="keyword">function</span> (<span class="params">&#123;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="params">  isHMR,</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="params">  app,</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="params">  store,</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="params">  route,</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="params">  params,</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="params">  error,</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="params">  redirect,</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="params">&#125;</span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">const</span> defaultLocale = app.i18n.fallbackLocale</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">// If middleware is called from hot module replacement, ignore it</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">if</span> (isHMR) <span class="keyword">return</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">// Get locale from params</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">const</span> locale = params.lang || defaultLocale</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">if</span> (!store.state.locales.includes(locale)) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> error(&#123; <span class="attr">message</span>: <span class="string">'This page could not be found.'</span>, <span class="attr">statusCode</span>: <span class="number">404</span> &#125;)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">// Set locale</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">  store.commit(<span class="string">'SET_LANG'</span>, locale)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">  app.i18n.locale = store.state.locale</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">// If route is /&lt;defaultLocale&gt;/... -&gt; redirect to /...</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">if</span> (</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    locale === defaultLocale &amp;&amp;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">    route.fullPath.indexOf(<span class="string">'/'</span> + defaultLocale) === <span class="number">0</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">  ) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">const</span> toReplace =</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">      <span class="string">'^/'</span> +</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">      defaultLocale +</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">      (route.fullPath.indexOf(<span class="string">'/'</span> + defaultLocale + <span class="string">'/'</span>) === <span class="number">0</span> ? <span class="string">'/'</span> : <span class="string">''</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">const</span> re = <span class="keyword">new</span> <span class="built_in">RegExp</span>(toReplace)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> redirect(route.fullPath.replace(re, <span class="string">'/'</span>))</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></blockquote><h3 id="7、在nuxt-config-js文件中进行配置"><a href="#7、在nuxt-config-js文件中进行配置" class="headerlink" title="7、在nuxt.config.js文件中进行配置"></a>7、在nuxt.config.js文件中进行配置</h3><blockquote><p>在上面写好之后，需要在这里进行配置才可以使用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">/*</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment">   ** Nuxt rendering mode</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment">   ** See https://nuxtjs.org/api/configuration-mode</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment">   */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  mode: <span class="string">'universal'</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">/*</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="comment">   ** Nuxt target</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="comment">   ** See https://nuxtjs.org/api/configuration-target</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="comment">   */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  target: <span class="string">'server'</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">/*</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="comment">   ** Headers of the page</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="comment">   ** See https://nuxtjs.org/api/configuration-head</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="comment">   */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">  head: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    title: process.env.npm_package_name || <span class="string">''</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    meta: [</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">      &#123; <span class="attr">charset</span>: <span class="string">'utf-8'</span> &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">      &#123; <span class="attr">name</span>: <span class="string">'viewport'</span>, <span class="attr">content</span>: <span class="string">'width=device-width, initial-scale=1'</span> &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">      &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        hid: <span class="string">'description'</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        name: <span class="string">'description'</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        content: process.env.npm_package_description || <span class="string">''</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">      &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    ],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    link: [</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">      &#123; <span class="attr">rel</span>: <span class="string">'icon'</span>, <span class="attr">type</span>: <span class="string">'image/x-icon'</span>, <span class="attr">href</span>: <span class="string">'/favicon.ico'</span> &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">      &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">        rel: <span class="string">'stylesheet'</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">        href: <span class="string">'//at.alicdn.com/t/xxx.css'</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">      &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">    ],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">// 头部内容、</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">  &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">/*</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line"><span class="comment">   ** Global CSS</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line"><span class="comment">   */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">  css: [<span class="string">'element-ui/lib/theme-chalk/index.css'</span>, <span class="string">'@/assets/public.less'</span>],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">/*</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line"><span class="comment">   ** Plugins to load before mounting the App</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line"><span class="comment">   ** https://nuxtjs.org/guide/plugins</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line"><span class="comment">   */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">  plugins: [</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line">    &#123; <span class="attr">src</span>: <span class="string">'@/plugins/element-ui'</span>, <span class="attr">ssr</span>: <span class="literal">true</span> &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line">    <span class="string">'~/plugins/axios'</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">+    <span class="string">'@/plugins/i18n.js'</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">  ],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">49</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">50</span></pre></td><td class="code"><pre><span class="line">  router: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">51</span></pre></td><td class="code"><pre><span class="line">+    middleware: <span class="string">'i18n'</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">52</span></pre></td><td class="code"><pre><span class="line">  &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">53</span></pre></td><td class="code"><pre><span class="line">  generate: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">54</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">// 这里是指定生成静态文件的路由</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">55</span></pre></td><td class="code"><pre><span class="line">+    routes: [<span class="string">'/'</span>, <span class="string">'/about'</span>, <span class="string">'/zh-CN'</span>, <span class="string">'/zh-CN/about'</span>],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">56</span></pre></td><td class="code"><pre><span class="line">  &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">57</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">/*</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">58</span></pre></td><td class="code"><pre><span class="line"><span class="comment">   ** Auto import components</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">59</span></pre></td><td class="code"><pre><span class="line"><span class="comment">   ** See https://nuxtjs.org/api/configuration-components</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">60</span></pre></td><td class="code"><pre><span class="line"><span class="comment">   */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">61</span></pre></td><td class="code"><pre><span class="line">  components: <span class="literal">true</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">62</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">/*</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">63</span></pre></td><td class="code"><pre><span class="line"><span class="comment">   ** Nuxt.js dev-modules</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">64</span></pre></td><td class="code"><pre><span class="line"><span class="comment">   */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">65</span></pre></td><td class="code"><pre><span class="line">  buildModules: [</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">66</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">// Doc: https://github.com/nuxt-community/eslint-module</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">67</span></pre></td><td class="code"><pre><span class="line">    <span class="string">'@nuxtjs/eslint-module'</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">68</span></pre></td><td class="code"><pre><span class="line">  ],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">69</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">/*</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">70</span></pre></td><td class="code"><pre><span class="line"><span class="comment">   ** Nuxt.js modules</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">71</span></pre></td><td class="code"><pre><span class="line"><span class="comment">   */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">72</span></pre></td><td class="code"><pre><span class="line">  modules: [<span class="string">'@nuxtjs/axios'</span>],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">73</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">/**</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">74</span></pre></td><td class="code"><pre><span class="line"><span class="comment">   * axios 代理</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">75</span></pre></td><td class="code"><pre><span class="line"><span class="comment">   */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">76</span></pre></td><td class="code"><pre><span class="line">  axios: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">77</span></pre></td><td class="code"><pre><span class="line">    prefix: <span class="string">'/api'</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">78</span></pre></td><td class="code"><pre><span class="line">    credentials: <span class="literal">true</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">79</span></pre></td><td class="code"><pre><span class="line">    proxy: <span class="literal">true</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">80</span></pre></td><td class="code"><pre><span class="line">  &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">81</span></pre></td><td class="code"><pre><span class="line">  proxy: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">82</span></pre></td><td class="code"><pre><span class="line">    <span class="string">'/api'</span>: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">83</span></pre></td><td class="code"><pre><span class="line">      target: <span class="string">'xxxx'</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">84</span></pre></td><td class="code"><pre><span class="line">      pathRewrite: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">85</span></pre></td><td class="code"><pre><span class="line">        <span class="string">'^/api/'</span>: <span class="string">'/'</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">86</span></pre></td><td class="code"><pre><span class="line">      &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">87</span></pre></td><td class="code"><pre><span class="line">      changeOrigin: <span class="literal">true</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">88</span></pre></td><td class="code"><pre><span class="line">    &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">89</span></pre></td><td class="code"><pre><span class="line">  &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">90</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">/*</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">91</span></pre></td><td class="code"><pre><span class="line"><span class="comment">   ** Build configuration</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">92</span></pre></td><td class="code"><pre><span class="line"><span class="comment">   ** See https://nuxtjs.org/api/configuration-build/</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">93</span></pre></td><td class="code"><pre><span class="line"><span class="comment">   */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">94</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">// build: &#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">95</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">//   transpile: [/^element-ui/],</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">96</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">97</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">// &#125;,</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">98</span></pre></td><td class="code"><pre><span class="line">  build: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">99</span></pre></td><td class="code"><pre><span class="line">    vendor: [<span class="string">'element-ui'</span>],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">100</span></pre></td><td class="code"><pre><span class="line">    babel: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">101</span></pre></td><td class="code"><pre><span class="line">      plugins: [</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">102</span></pre></td><td class="code"><pre><span class="line">        [</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">103</span></pre></td><td class="code"><pre><span class="line">          <span class="string">'component'</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">104</span></pre></td><td class="code"><pre><span class="line">          &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">105</span></pre></td><td class="code"><pre><span class="line">            libraryName: <span class="string">'element-ui'</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">106</span></pre></td><td class="code"><pre><span class="line">            styleLibraryName: <span class="string">'theme-chalk'</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">107</span></pre></td><td class="code"><pre><span class="line">          &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">108</span></pre></td><td class="code"><pre><span class="line">        ],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">109</span></pre></td><td class="code"><pre><span class="line">      ],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">110</span></pre></td><td class="code"><pre><span class="line">      comments: <span class="literal">true</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">111</span></pre></td><td class="code"><pre><span class="line">    &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">112</span></pre></td><td class="code"><pre><span class="line">  &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">113</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></blockquote><h3 id="8、创建本地语言包"><a href="#8、创建本地语言包" class="headerlink" title="8、创建本地语言包"></a>8、创建本地语言包</h3><blockquote><p>​    根据自己不同的需求，创建不同的语言包，这里只展示一个语言包</p><p>​    新建 local文件夹，创建en-US.json文件</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">"links"</span>: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"home"</span>: <span class="string">"Home"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"about"</span>: <span class="string">"About"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"english"</span>: <span class="string">"English"</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">"home"</span>: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"index"</span>: <span class="string">"index"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"search"</span>: <span class="string">"searchs"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"title"</span>: <span class="string">"hahah"</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  <span class="attr">"about"</span>: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    <span class="attr">"title"</span>: <span class="string">"About"</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></blockquote><h3 id="9、在page文件夹下创建页面文件"><a href="#9、在page文件夹下创建页面文件" class="headerlink" title="9、在page文件夹下创建页面文件"></a>9、在page文件夹下创建页面文件</h3><blockquote><p>在page页面文件夹下创建_lang文件夹。lang前面的下划线是动态路由的意思，nuxt.js的router路由文件会根据page文件夹自动生成对应的路由文件</p><p>下面代码是切换语言的文件代码</p><p>创建page/_lang/index.vue</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  &lt;el-container class&#x3D;&quot;bv-example-row main&quot;&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    &lt;NuxtLink</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">      v-if&#x3D;&quot;$i18n.locale &#x3D;&#x3D;&#x3D; &#39;zh-CN&#39;&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">      :to&#x3D;&quot;&#123; name: &#39;lang&#39;, params: &#123; lang: &#39;en-US&#39; &#125; &#125;&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">      class&#x3D;&quot;Header__Link&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">      active-class&#x3D;&quot;none&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">      exact</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    &gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">      en&#123;&#123; $t(&#39;links.english&#39;) &#125;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    &lt;&#x2F;NuxtLink&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    &lt;NuxtLink</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">      v-else</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">      :to&#x3D;&quot;&#123; name: &#39;lang&#39;, params: &#123; lang: &#39;zh-CN&#39; &#125; &#125;&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">      class&#x3D;&quot;Header__Link&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">      active-class&#x3D;&quot;none&quot;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">      exact</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    &gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">      zh&#123;&#123; $t(&#39;links.english&#39;) &#125;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">    &lt;&#x2F;NuxtLink&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    &lt;p&gt;&#123;&#123; $route.fullPath &#125;&#125;&lt;&#x2F;p&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">  &lt;&#x2F;el-container&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;template&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">export default &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">  head() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">    return &#123; title: this.$t(&#39;home.title&#39;) &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">  &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">  components: &#123;&#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">  created() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">    console.log(this)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">  &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;script&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line">&lt;style scoped&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">.main &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">  margin: 30px auto;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;style&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr></table></figure><p>创建page/index.vue</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">import Index from &#39;@&#x2F;pages&#x2F;_lang&#x2F;index&#39;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">export default Index</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&lt;&#x2F;script&gt;</span></pre></td></tr></table></figure></blockquote><h3 id="10、总结"><a href="#10、总结" class="headerlink" title="10、总结"></a>10、总结</h3><blockquote><p>到此 国际化就配置完成了。</p><p>运行结果</p><p><img src="1.png" alt="1"></p><p>默认语言URL：<a href="http://localhost:3000" target="_blank" rel="noopener">http://localhost:3000</a></p><p>非默认语言URL：<a href="http://localhost:3000/en-US" target="_blank" rel="noopener">http://localhost:3000/en-US</a></p></blockquote><p>如果能够帮助到你，是小编最大的荣幸</p><p>当然   有 不好的地方  请大家帮忙指出   学习永无止境    </p><p>小编一直认为  人外有人  天外有天    一起学习   共同进步</p><p>让我们共同加油吧！！！</p><p>程序的世界，写作的过程中部分文章难免会参考与借鉴网络上的一些资源、见解。如有侵权请与作者联系。如若如实侵权，文章会在24小时内删除。如若由于部分文章存在侵权行为给您带来不便还请见谅。</p><p>本博客仅仅为自己以及前端爱好者提供便利，不做任何商业用途。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;​    由于本人的能力有限，如若有说得做的不对的地方，还望指出。当然，如若你有更好的方法，或者更优解，还望不吝赐
      
    
    </summary>
    
    
      <category term="nuxt" scheme="http://www.blog.geyunjie.com/categories/nuxt/"/>
    
    
      <category term="nuxt" scheme="http://www.blog.geyunjie.com/tags/nuxt/"/>
    
      <category term="i18n" scheme="http://www.blog.geyunjie.com/tags/i18n/"/>
    
  </entry>
  
  <entry>
    <title>vue 中时时监听网络的链接状态</title>
    <link href="http://www.blog.geyunjie.com/2020/07/03/vue-network-online/"/>
    <id>http://www.blog.geyunjie.com/2020/07/03/vue-network-online/</id>
    <published>2020-07-03T08:53:03.000Z</published>
    <updated>2020-07-07T01:40:50.312Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote><p>​    由于本人的能力有限，如若有说得做的不对的地方，还望指出。当然，如若你有更好的方法，或者更优解，还望不吝赐教。</p></blockquote><h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><blockquote><p>​    实时监听app的联网状态，在断开网络的时候，提示用户网络断开了</p></blockquote><h3 id="自己的想法"><a href="#自己的想法" class="headerlink" title="自己的想法"></a>自己的想法</h3><blockquote><p>​    监听用户的网络链接状态，如果断网，显示断网的页面。</p></blockquote><h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><p>在app.vue文件中添加一个属性来监控网络是否是开启状态</p><blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">data() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">      network: <span class="literal">true</span>, <span class="comment">//默认有网</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    &#125;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  &#125;,</span></pre></td></tr></table></figure></blockquote><p>在app.vue 的mounted生命钩子函数里注册检测网络链接的状态</p><blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">mounted() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">// 检测断网</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  <span class="built_in">window</span>.addEventListener(<span class="string">"offline"</span>, () =&gt; &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">console</span>.log(<span class="string">"已断网"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">this</span>.network = <span class="literal">false</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  &#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="built_in">window</span>.addEventListener(<span class="string">"online"</span>, () =&gt; &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">console</span>.log(<span class="string">"网络已连接"</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">this</span>.network = <span class="literal">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  &#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">&#125;,</span></pre></td></tr></table></figure></blockquote><p>在app.vue 的 判断network是否为false，如果是，跳转到断网的页面。为了简单，我就直接写在本页面上了</p><blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"app"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">   &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"network"</span> v-<span class="keyword">if</span>=<span class="string">"!network"</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">     网络已断开，链接网络，自动刷新</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">   &lt;<span class="regexp">/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="regexp">   &lt;div v-else&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="regexp">     &lt;keep-alive&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="regexp">       &lt;router-view :key="$route.path" v-if="$route.meta.keepAlive" /</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">     &lt;<span class="regexp">/keep-alive&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="regexp">     &lt;router-view :key="$route.path" v-if="!$route.meta.keepAlive" /</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">   &lt;<span class="regexp">/div&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="regexp"> &lt;/</span>div&gt;</span></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.network</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">width</span>: <span class="number">100vw</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">height</span>: <span class="number">100vh</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">line-height</span>: <span class="number">100vh</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">text-align</span>: center;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></blockquote><p>注意：部分文章可能会在不就的将来更新</p><p>如果能够帮助到你，是小编最大的荣幸</p><p>当然   有 不好的地方  请大家帮忙指出   学习永无止境    </p><p>小编一直认为  人外有人  天外有天    一起学习   共同进步</p><p>让我们共同加油吧！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;​    由于本人的能力有限，如若有说得做的不对的地方，还望指出。当然，如若你有更好的方法，或者更优解，还望不吝赐
      
    
    </summary>
    
    
      <category term="vue" scheme="http://www.blog.geyunjie.com/categories/vue/"/>
    
    
      <category term="vue" scheme="http://www.blog.geyunjie.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>hexo从windows上移动的mac上的记录和遇到的坑</title>
    <link href="http://www.blog.geyunjie.com/2020/06/30/hexo-move-mac/"/>
    <id>http://www.blog.geyunjie.com/2020/06/30/hexo-move-mac/</id>
    <published>2020-06-30T05:03:39.000Z</published>
    <updated>2020-06-30T05:34:46.923Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>终于，迎来第一本苹果电脑，现在需要把很多东西移动到mac本上。下面是记录迁移博客的一些记录。</p></blockquote><h3 id="1-目前了解的是有两种方法进行迁移"><a href="#1-目前了解的是有两种方法进行迁移" class="headerlink" title="1.目前了解的是有两种方法进行迁移"></a>1.目前了解的是有两种方法进行迁移</h3><h3 id="1-1-粘贴复制的方法"><a href="#1-1-粘贴复制的方法" class="headerlink" title="1.1 粘贴复制的方法"></a>1.1 粘贴复制的方法</h3><blockquote><p>把所有的资源都粘贴到mac本上(安装的包除外)</p><p>sudo yarn install  / npm i 安装依赖</p><p>sudo npm i hexo-cli -g / sudo yarn add hero-cli -g 全局安装 hero-cli</p><p>sudo hexo new xxx</p><p>sudo hexo clean</p><p>sudo hexo g</p><p>sudo hexo d</p></blockquote><h3 id="1-2-在windows上把所有的资源上传到博客的一个新的分支上"><a href="#1-2-在windows上把所有的资源上传到博客的一个新的分支上" class="headerlink" title="1.2 在windows上把所有的资源上传到博客的一个新的分支上"></a>1.2 在windows上把所有的资源上传到博客的一个新的分支上</h3><blockquote><p>在本地创建新的分支</p><p>把包以外的资源上传的此分支上</p><p>在mac上使用git clone 地址   把资源克隆到本地</p><p>然后再重复1.1上面的命令就ok了</p></blockquote><h3 id="2-遇到的坑"><a href="#2-遇到的坑" class="headerlink" title="2.遇到的坑"></a>2.遇到的坑</h3><blockquote><p>由于在装node.js的时候没有注意，把node装成了测试版本，由于版本太高，造成运行hexo的时候报错  一些变量找不到</p><p>解决办法：把node版本降级到稳定版本就好了。可以使用。 n 进行降级。  n是node的简写。 是管理node的版本的一个工具，详细用法可以自行百度</p></blockquote><p>   注意：部分文章可能会在不就的将来更新</p><p>  如果能够帮助到你，是小编最大的荣幸</p><p>  当然   有 不好的地方  请大家帮忙指出   学习永无止境    </p><p>  小编一直认为  人外有人  天外有天    一起学习   共同进步</p><p>  让我们共同加油吧！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;终于，迎来第一本苹果电脑，现在需要把很多东西移动到mac本上。下面是记录迁移博客的一些记录。&lt;/p&gt;
&lt;/bloc
      
    
    </summary>
    
    
      <category term="hexo" scheme="http://www.blog.geyunjie.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://www.blog.geyunjie.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>gitConfig</title>
    <link href="http://www.blog.geyunjie.com/2020/06/27/gitConfig/"/>
    <id>http://www.blog.geyunjie.com/2020/06/27/gitConfig/</id>
    <published>2020-06-27T12:10:22.000Z</published>
    <updated>2020-06-27T12:10:22.811Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Homebrew</title>
    <link href="http://www.blog.geyunjie.com/2020/06/27/Homebrew/"/>
    <id>http://www.blog.geyunjie.com/2020/06/27/Homebrew/</id>
    <published>2020-06-27T12:08:12.000Z</published>
    <updated>2020-06-27T12:08:12.255Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>vue-proxy</title>
    <link href="http://www.blog.geyunjie.com/2020/05/12/vue-proxy/"/>
    <id>http://www.blog.geyunjie.com/2020/05/12/vue-proxy/</id>
    <published>2020-05-12T13:43:10.000Z</published>
    <updated>2020-05-31T06:17:54.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前端工程化开发时的跨域解决方案"><a href="#前端工程化开发时的跨域解决方案" class="headerlink" title="前端工程化开发时的跨域解决方案"></a>前端工程化开发时的跨域解决方案</h2><blockquote><p>此方案只能用于开发环境，线上最好设置同源策略</p></blockquote><h3 id="1-场景"><a href="#1-场景" class="headerlink" title="1. 场景"></a>1. 场景</h3><p>前后端分离的项目</p><p>前后端不在同一服务器的情况下，前端要访问后端API，可通过在vue.config.js中配置代理服务器</p><h3 id="2-配置"><a href="#2-配置" class="headerlink" title="2. 配置"></a>2. 配置</h3><h4 id="2-1-前提条件"><a href="#2-1-前提条件" class="headerlink" title="2.1 前提条件"></a>2.1 前提条件</h4><p>1：安装<strong>vue-lic</strong></p><p>2：安装<strong>axios</strong>  用于发送请求</p><h4 id="2-2-配置axios"><a href="#2-2-配置axios" class="headerlink" title="2.2 配置axios"></a>2.2 配置axios</h4><p>详细配置 请查看axios </p><h4 id="2-3-开始发送请求"><a href="#2-3-开始发送请求" class="headerlink" title="2.3 开始发送请求"></a>2.3 开始发送请求</h4><p>此时控制台会报跨域错误 ， 这个时候  就需要设置跨域了，或者后台配置允许跨域（一般都不这么干）</p><h4 id="2-4-前端配置跨域"><a href="#2-4-前端配置跨域" class="headerlink" title="2.4 前端配置跨域"></a>2.4 前端配置跨域</h4><blockquote><ol><li>先在根目录创建vue.config.js</li><li>写入以下代码</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">//vue-cli3.0 里面的 vue.config.js做配置</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">devServer: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    proxy: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">        <span class="string">'/api'</span>: &#123;     <span class="comment">//这里最好有一个 /</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">            target: <span class="string">'http://xx.xx.xx.xx:8080'</span>,  <span class="comment">// 后台接口域名</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">            ws: <span class="literal">true</span>,        <span class="comment">//如果要代理 websockets，配置这个参数</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">            secure: <span class="literal">false</span>,  <span class="comment">// 如果是https接口，需要配置这个参数</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">            changeOrigin: <span class="literal">true</span>,  <span class="comment">//是否跨域</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">            pathRewrite:&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">                <span class="string">'^/api'</span>:<span class="string">''</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr></table></figure><ol start="3"><li>axios 中配置的 根路径（baseURL）需要设置你要代理的路径 ，此时，就会把这个路径代理到后台接口的域名下</li></ol></blockquote><p>注意：部分文章可能会在不就的将来更新</p><p>如果能够帮助到你，是小编最大的荣幸</p><p>当然   有 不好的地方  请大家帮忙指出   学习永无止境    </p><p>小编一直认为  人外有人  天外有天    一起学习   共同进步</p><p>让我们共同加油吧！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前端工程化开发时的跨域解决方案&quot;&gt;&lt;a href=&quot;#前端工程化开发时的跨域解决方案&quot; class=&quot;headerlink&quot; title=&quot;前端工程化开发时的跨域解决方案&quot;&gt;&lt;/a&gt;前端工程化开发时的跨域解决方案&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;此方案只能
      
    
    </summary>
    
    
      <category term="vue" scheme="http://www.blog.geyunjie.com/categories/vue/"/>
    
    
      <category term="proxy" scheme="http://www.blog.geyunjie.com/tags/proxy/"/>
    
  </entry>
  
  <entry>
    <title>hexo 集成 gitalk评论功能遇到的坑</title>
    <link href="http://www.blog.geyunjie.com/2020/03/20/hexo-gitalk/"/>
    <id>http://www.blog.geyunjie.com/2020/03/20/hexo-gitalk/</id>
    <published>2020-03-20T05:03:39.000Z</published>
    <updated>2020-07-08T09:10:22.730Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p>​    由于本人的能力有限，如若有说得做的不对的地方，还望指出。当然，如若你有更好的方法，或者更优解，还望不吝赐教。</p></blockquote><h2 id="1、什么是gitalk？"><a href="#1、什么是gitalk？" class="headerlink" title="1、什么是gitalk？"></a>1、什么是gitalk？</h2><blockquote><p><strong>Gitalk</strong> 利用了 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fdeveloper.github.com%2Fv3%2F" target="_blank" rel="noopener">GithubAPI</a> 基于 <strong>GitHub Issue</strong> 和 <strong>Preact</strong> 开发的评论插件，官方网址： <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgitalk.github.io%2F" target="_blank" rel="noopener">https://gitalk.github.io</a></p><p>特点：</p><ul><li>使用 GitHub 登录</li><li>支持多语言 [en, zh-CN, zh-TW, es-ES, fr, ru]</li><li>支持个人或组织</li><li>无干扰模式（设置 distractionFreeMode 为 true 开启）</li><li>快捷键提交评论 </li></ul></blockquote><h2 id="2、配置gitalk"><a href="#2、配置gitalk" class="headerlink" title="2、配置gitalk"></a>2、配置gitalk</h2><blockquote><ol><li><p>注册：要使用 Gitalk 需要先在 GitHub 上注册新应用，链接：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fsettings%2Fapplications%2Fnew" target="_blank" rel="noopener">https</a> : <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fsettings%2Fapplications%2Fnew" target="_blank" rel="noopener">//github.com/settings/applications/new</a></p><p><img src="hexo-gitalk/hexo-1.png" alt="hexo-1"> 2. 点击注册后，会生成<strong>Client ID</strong>和<strong>Client Secret</strong>在配置中需要用到，也是应用访问你 Github 的凭证，具体配置如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">comment:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  gitalk:</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">enable</span>: <span class="literal">true</span> <span class="comment">## If you want to use Gitment comment system please set the value to true.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    ID: location.pathname</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    owner: pythongyj <span class="comment">## Your GitHub ID, e.g. username</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    repo: gitalk <span class="comment">## The repository to store your comments, make sure you're the repo's owner, e.g. gitalk.github.io</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    client_id: xxx <span class="comment">## GitHub client ID, e.g. 75752dafe7907a897619</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    client_secret: xxx <span class="comment">## GitHub client secret, e.g. ec2fb9054972c891289640354993b662f4cccc50</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    admin: pythongyj <span class="comment">## Github repo owner and collaborators, only these guys can initialize github issues.</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    language: zh-CN <span class="comment">## Language</span></span></pre></td></tr></table></figure><ol start="3"><li>重新部署博客，打开页面进入某一博客内容下，评论会出现在页面最下方</li></ol></li></ol></blockquote><h2 id="3、遇到的坑"><a href="#3、遇到的坑" class="headerlink" title="3、遇到的坑"></a>3、遇到的坑</h2><blockquote><p>自己遇到的坑：</p><ol><li><h4 id="未找到相关的issue进行评论，请联系-XXX初始化创建。"><a href="#未找到相关的issue进行评论，请联系-XXX初始化创建。" class="headerlink" title="未找到相关的issue进行评论，请联系@XXX初始化创建。"></a>未找到相关的issue进行评论，请联系@XXX初始化创建。</h4><ul><li>解决办法：出现这总情况是因为博主未给文章评论初始化，博主只需要登录 GitHub 账户即可。</li></ul></li><li><h4 id="浏览器进入开发者模式，看见类似https-api-github-com-user-401-Unauthorized"><a href="#浏览器进入开发者模式，看见类似https-api-github-com-user-401-Unauthorized" class="headerlink" title="浏览器进入开发者模式，看见类似https://api.github.com/user 401 (Unauthorized)"></a>浏览器进入开发者模式，看见类似<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fapi.github.com%2Fuser" target="_blank" rel="noopener">https://api.github.com/user</a> 401 (Unauthorized)</h4><ul><li>解决办法：找到主题配置文件， 在 gitalk 配置里添加 <strong>ID: location.pathname</strong></li></ul></li></ol><p>查找问题时发现的的坑：</p><ol><li><h4 id="Error-Not-Found"><a href="#Error-Not-Found" class="headerlink" title="Error: Not Found."></a>Error: Not Found.</h4><ul><li>解决办法：未能正确找到仓库 repo，检查一下你的仓库是否配置正确</li></ul></li></ol></blockquote><p>   注意：部分文章可能会在不就的将来更新</p><p>  如果能够帮助到你，是小编最大的荣幸</p><p>  当然   有 不好的地方  请大家帮忙指出   学习永无止境    </p><p>  小编一直认为  人外有人  天外有天    一起学习   共同进步</p><p>  让我们共同加油吧！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;​    由于本人的能力有限，如若有说得做的不对的地方，还望指出。当然，如若你有更好的方法，或者更优解，还望不吝赐
      
    
    </summary>
    
    
      <category term="hexo" scheme="http://www.blog.geyunjie.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://www.blog.geyunjie.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>vant-UI 组件的List渲染列表多页列表 切换不加载的问题</title>
    <link href="http://www.blog.geyunjie.com/2019/06/04/vant-list/"/>
    <id>http://www.blog.geyunjie.com/2019/06/04/vant-list/</id>
    <published>2019-06-04T12:15:11.000Z</published>
    <updated>2020-05-31T07:53:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>1 数据渲染</p><p>template</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">van-list</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag">  <span class="attr">v-for</span>=<span class="string">"items in tabbar"</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="tag">  <span class="attr">:key</span>=<span class="string">"items.id"</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="tag">  <span class="attr">v-show</span>=<span class="string">"items.isActive"</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="tag">  <span class="attr">v-model</span>=<span class="string">"items.loading"</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="tag">  <span class="attr">:finished</span>=<span class="string">"items.finished"</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="tag">  <span class="attr">finished-text</span>=<span class="string">"没有更多了"</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="tag">  @<span class="attr">load</span>=<span class="string">"onLoad(items)"</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="tag">  <span class="attr">ref</span>=<span class="string">"listItem"</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">van-cell</span> <span class="attr">v-for</span>=<span class="string">"item in items.list"</span> <span class="attr">:key</span>=<span class="string">"item"</span> <span class="attr">:title</span>=<span class="string">"item"</span>&gt;</span>&#123;&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    items.value</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">  &#125;&#125;<span class="tag">&lt;/<span class="name">van-cell</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">van-list</span>&gt;</span></span></pre></td></tr></table></figure><p>data</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">data() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">   <span class="keyword">return</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">     tabbar: [</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">       &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">         id: <span class="number">1</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">         value: <span class="string">"Lorem"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">         isActive: <span class="literal">true</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">         loading: <span class="literal">false</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">         finished: <span class="literal">false</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">         list: [],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">       &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">       &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">         id: <span class="number">2</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">         value: <span class="string">"Lorem2"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">         isActive: <span class="literal">false</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">         loading: <span class="literal">false</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">         finished: <span class="literal">false</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">         list: [],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">       &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">       &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">         id: <span class="number">3</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">         value: <span class="string">"Lorem3"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">         isActive: <span class="literal">false</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">         loading: <span class="literal">false</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">         finished: <span class="literal">false</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">         list: [],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">       &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">     ],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">   &#125;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line"> &#125;,</span></pre></td></tr></table></figure><p>methods</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">onLoad(obj) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">// 异步更新数据</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">// setTimeout 仅做示例，真实场景中一般为 ajax 请求</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">      obj.list.push(obj.list.length + <span class="number">1</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">console</span>.log(obj.id);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">console</span>.log(obj.finished);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">// 加载状态结束</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    obj.loading = <span class="literal">false</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    <span class="comment">// 数据全部加载完成</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">if</span> (obj.list.length &gt;= <span class="number">40</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">      obj.finished = <span class="literal">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">  &#125;, <span class="number">1000</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">&#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * 切换选项</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * obj  选项的数据</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">onClickLoadData(obj) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">this</span>.tabbar.forEach(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">    item.isActive = <span class="literal">false</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">  &#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">  obj.isActive = <span class="literal">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">&#125;,</span></pre></td></tr></table></figure><p>切换页面  会发现  数据不会加载</p><p>这是为什么呢？</p><p>这是因为页面渲染的时候  已经进行过加载了   在点击切换按钮的时候  并没有触发onload事件</p><p>那么你可能会说   那点击的时候调用一次onLoad事件不就好了么？</p><p>对   点击的时候调用一次onLoad是会触发调用 </p><p>但是呢？ </p><p>第一个问题：如果第一次加载的数据不足以铺满全屏，那么  数据就不会继续加载了</p><p>第二个问题：如果你的数据已经全部加载结束了，但是你点击切换的时候  由于你调用了onLoad事件。就还会触发。</p><p>那么！</p><p>你也许会问 那该怎么做呢？</p><p>那么现在我就告诉你</p><p>超简单  一行代码搞定</p><p>官方给了一个    check方法</p><p>所以  我们就可以这样做</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * 切换选项</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * obj  选项的数据</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">onClickLoadData(obj) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">this</span>.tabbar.forEach(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    item.isActive = <span class="literal">false</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  &#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  obj.isActive = <span class="literal">true</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">+  <span class="keyword">this</span>.$refs.listItem[obj.id - <span class="number">1</span>].check();检查点击的选项所显示的页面的滚动位置，若已滚动至底部，则会触发 load 事件  [obj.id - <span class="number">1</span>]为选中当前的list</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">&#125;,</span></pre></td></tr></table></figure><p>完美搞定 </p><p>注意：部分文章可能会在不就的将来更新</p><p>如果能够帮助到你，是小编最大的荣幸</p><p>当然 有 不好的地方 请大家帮忙指出 学习永无止境</p><p>小编一直认为 人外有人 天外有天 一起学习 共同进步</p><p>让我们共同加油吧！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1 数据渲染&lt;/p&gt;
&lt;p&gt;template&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td cl
      
    
    </summary>
    
    
      <category term="vant" scheme="http://www.blog.geyunjie.com/categories/vant/"/>
    
    
      <category term="vant" scheme="http://www.blog.geyunjie.com/tags/vant/"/>
    
  </entry>
  
  <entry>
    <title>vue-router</title>
    <link href="http://www.blog.geyunjie.com/2019/05/24/vue-router-parms/"/>
    <id>http://www.blog.geyunjie.com/2019/05/24/vue-router-parms/</id>
    <published>2019-05-24T14:33:13.000Z</published>
    <updated>2020-05-31T07:45:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>vue-router 路由传参方式</p><p>1 路由组件传参</p><p>1.1 布尔模式</p><p>1.1.1 配置路由</p><p>添加 props: true 选项</p><pre><code>{   // 我的地址列表   name: &quot;addressedit&quot;,   path: &quot;/account/addressedit&quot;,   props: true,   component: () =&gt; import(&quot;@/views/addressEdit&quot;), },</code></pre><p>1.1.2 传递参数</p><p>在传参的过程中 写上 props: true, 说明开启了路由组件传参</p><pre><code>onEditAddress(item, index) {  this.$router.push({    name: &quot;addressedit&quot;,    params: { id: index },    props: true,  });  this.$toast(&quot;编辑地址:&quot; + index);},</code></pre><p>1.1.3 获取传递的参数</p><p>通过 route 对象上的 params 属性获取传递过来的属性 即：this.$route.params</p><pre><code>this.$route.params.id</code></pre><p>注意：部分文章可能会在不就的将来更新</p><p>如果能够帮助到你，是小编最大的荣幸</p><p>当然 有 不好的地方 请大家帮忙指出 学习永无止境</p><p>小编一直认为 人外有人 天外有天 一起学习 共同进步</p><p>让我们共同加油吧！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;vue-router 路由传参方式&lt;/p&gt;
&lt;p&gt;1 路由组件传参&lt;/p&gt;
&lt;p&gt;1.1 布尔模式&lt;/p&gt;
&lt;p&gt;1.1.1 配置路由&lt;/p&gt;
&lt;p&gt;添加 props: true 选项&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
   // 我的地址列表
   name: &amp;quot
      
    
    </summary>
    
    
      <category term="vue" scheme="http://www.blog.geyunjie.com/categories/vue/"/>
    
    
      <category term="vue-router" scheme="http://www.blog.geyunjie.com/tags/vue-router/"/>
    
  </entry>
  
  <entry>
    <title>vue-i18n</title>
    <link href="http://www.blog.geyunjie.com/2019/05/18/vue-i18n/"/>
    <id>http://www.blog.geyunjie.com/2019/05/18/vue-i18n/</id>
    <published>2019-05-18T12:25:10.000Z</published>
    <updated>2020-05-31T07:28:20.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="在vue项目中使用vue-i18n-实现国际化"><a href="#在vue项目中使用vue-i18n-实现国际化" class="headerlink" title="在vue项目中使用vue-i18n 实现国际化"></a>在vue项目中使用vue-i18n 实现国际化</h2><blockquote><p>在很多项目的开发中都需要设置国际化</p><p>我也是在最近的一个项目中使用到了国际化，所以总结一下</p></blockquote><h3 id="1-安装vue-i18n"><a href="#1-安装vue-i18n" class="headerlink" title="1. 安装vue-i18n"></a>1. 安装vue-i18n</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">yarn add vue-i18n</span></pre></td></tr></table></figure><h3 id="2-在根目录中创建lang文件夹"><a href="#2-在根目录中创建lang文件夹" class="headerlink" title="2. 在根目录中创建lang文件夹"></a>2. 在根目录中创建lang文件夹</h3><p><img src="C:/Users/geyunjie/Desktop/stduy-record/vue-i18n/lang.png" alt=""></p><p>en_us.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  footer: [<span class="string">"home"</span>, <span class="string">"catgory"</span>, <span class="string">"cart"</span>, <span class="string">"account"</span>, <span class="string">"not login"</span>],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  header: &#123;&#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  index: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    rowTime: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">      title: <span class="string">"xxx"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    recommend: <span class="string">"xxx"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  userPageText: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    WishList: <span class="string">"xxxx"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    listText: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">      MyOrders: <span class="string">"xxx"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">     ...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    LogOut: <span class="string">"Log Out"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">  &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">  login: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    btns: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">      fackbook: <span class="string">"xxx"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">     ...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    placeholder: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">      phone: <span class="string">"xxx"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">     ...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">  &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">&#125;;</span></pre></td></tr></table></figure><p>zh_cn.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  footer: [<span class="string">"首页"</span>, <span class="string">"分类"</span>, <span class="string">"购物车"</span>, <span class="string">"个人中心"</span>, <span class="string">"未登录"</span>],</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  header: &#123;&#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  index: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    rowTime: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">      title: <span class="string">"xxx"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    recommend: <span class="string">"xxx"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  userPageText: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    Coupons: <span class="string">"xxx"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    listText: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">      MyOrders: <span class="string">"xxx"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">     ...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    LogOut: <span class="string">"退出"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">  &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">  login: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">    btns: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">      fackbook: <span class="string">"xxx "</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">     ...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">    placeholder: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">      phone: <span class="string">"xxx"</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">      ...</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">  &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">&#125;;</span></pre></td></tr></table></figure><p>index.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">"vue"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> VueI18n <span class="keyword">from</span> <span class="string">"vue-i18n"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; Locale &#125; <span class="keyword">from</span> <span class="string">"vant"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> enUS <span class="keyword">from</span> <span class="string">"vant/lib/locale/lang/en-US"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zhCN <span class="keyword">from</span> <span class="string">"vant/lib/locale/lang/zh-CN"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> enLocale <span class="keyword">from</span> <span class="string">"./en_us"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zhLocale <span class="keyword">from</span> <span class="string">"./zh_cn"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">Vue.use(VueI18n);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> messages = &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  en: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    ...enUS,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    ...enLocale</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">  &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">  zh: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    ...zhCN,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    ...zhLocale</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">&#125;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> i18n = <span class="keyword">new</span> VueI18n(&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">  locale: <span class="string">"zh"</span>, <span class="comment">// 设置默认语言</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">  messages: messages, <span class="comment">// 设置资源文件对象</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// 更新vant组件库本身的语言变化，支持国际化</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">vantLocales</span>(<span class="params">lang</span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">if</span> (lang === <span class="string">"en"</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">    Locale.use(lang, enUS);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> (lang === <span class="string">"zh"</span>) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">    Locale.use(lang, zhCN);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> &#123; i18n, vantLocales &#125;;</span></pre></td></tr></table></figure><p>main.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; i18n, vantLocales &#125; <span class="keyword">from</span> <span class="string">"./lang"</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">vantLocales(i18n.locale);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Vue(&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  router,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  i18n,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  store,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  render: <span class="function">(<span class="params">h</span>) =&gt;</span> h(App),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#125;).$mount(<span class="string">"#app"</span>);</span></pre></td></tr></table></figure><h3 id="3-使用"><a href="#3-使用" class="headerlink" title="3. 使用"></a>3. 使用</h3><blockquote><p>在需要使用到国际化的组件内直接使用</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">van-cell</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag"><span class="attr">:title</span>=<span class="string">"$i18n.messages[this.$i18n.locale].userPageText.listText.MyOrders"</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="tag"><span class="attr">class</span>=<span class="string">"iconfont icon-record"</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="tag"><span class="attr">size</span>=<span class="string">"large"</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="tag">@<span class="attr">click</span>=<span class="string">"$router.push(&#123; name: 'orderlist' &#125;)"</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="tag">/&gt;</span></span></pre></td></tr></table></figure></blockquote><blockquote><p>为了方便 先引入  在使用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">created() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.i18nMsg = <span class="keyword">this</span>.$i18n.messages[<span class="keyword">this</span>.$i18n.locale].userPageText;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#125;,</span></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">van-cell</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="tag"><span class="attr">:title</span>=<span class="string">"i18nMsg.listText.MyOrders"</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="tag"><span class="attr">class</span>=<span class="string">"iconfont icon-record"</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="tag"><span class="attr">size</span>=<span class="string">"large"</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="tag">@<span class="attr">click</span>=<span class="string">"$router.push(&#123; name: 'orderlist' &#125;)"</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="tag">/&gt;</span></span></pre></td></tr></table></figure></blockquote><h3 id="4-按钮控制切换语言"><a href="#4-按钮控制切换语言" class="headerlink" title="4.  按钮控制切换语言"></a>4.  按钮控制切换语言</h3><p>this.$i18n.locale,当你赋值为‘zh’时，导航栏就变成中文；当赋值为 ‘en’时，就变成英文</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"top_btn"</span> @<span class="attr">click</span>=<span class="string">"changeLangEvent"</span>&gt;</span>中文<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">changeLangEvent() &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">'changeLangEvent'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.$confirm(<span class="string">'确定切换语言吗?'</span>, <span class="string">'提示'</span>, &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  confirmButtonText: <span class="string">'确定'</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  cancelButtonText: <span class="string">'取消'</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  type: <span class="string">'warning'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">&#125;).then(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">if</span> ( <span class="keyword">this</span>.$i18n.locale === <span class="string">'zh'</span> ) &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">this</span>.$i18n.locale = <span class="string">'en'</span>;<span class="comment">//关键语句</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">console</span>.log(<span class="string">'en'</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  &#125;<span class="keyword">else</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">this</span>.$i18n.locale = <span class="string">'zh'</span>;<span class="comment">//关键语句</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">console</span>.log(<span class="string">'zh'</span>)</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">&#125;).catch(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">  <span class="built_in">console</span>.log(<span class="string">'catch'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">this</span>.$message(&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">    type: <span class="string">'info'</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">  &#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>这只是一个案例，可以用一个变量存储要改变 的语言，点击按钮的时候，访问设置属性，从而设置不同的语言</p><p>注意：部分文章可能会在不就的将来更新</p><p>如果能够帮助到你，是小编最大的荣幸</p><p>当然   有 不好的地方  请大家帮忙指出   学习永无止境    </p><p>小编一直认为  人外有人  天外有天    一起学习   共同进步</p><p>让我们共同加油吧！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;在vue项目中使用vue-i18n-实现国际化&quot;&gt;&lt;a href=&quot;#在vue项目中使用vue-i18n-实现国际化&quot; class=&quot;headerlink&quot; title=&quot;在vue项目中使用vue-i18n 实现国际化&quot;&gt;&lt;/a&gt;在vue项目中使用vue-i18n
      
    
    </summary>
    
    
      <category term="vue" scheme="http://www.blog.geyunjie.com/categories/vue/"/>
    
    
      <category term="i18n" scheme="http://www.blog.geyunjie.com/tags/i18n/"/>
    
  </entry>
  
  <entry>
    <title>Vue字体图标不显示的设置</title>
    <link href="http://www.blog.geyunjie.com/2019/03/21/iconfont/"/>
    <id>http://www.blog.geyunjie.com/2019/03/21/iconfont/</id>
    <published>2019-03-20T16:00:00.000Z</published>
    <updated>2020-01-15T06:55:28.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="elementUI字体图标不显示-完美解决方案"><a href="#elementUI字体图标不显示-完美解决方案" class="headerlink" title="elementUI字体图标不显示 完美解决方案"></a>elementUI字体图标不显示 完美解决方案</h2><p>使用vue init webpack-simple   xxx 创建的项目</p><p>在使用ElementUI的时候使用 <strong>字体图标</strong>时提示 </p><p><img src="./assets/%E6%B2%A1%E6%9C%89loader%E5%A4%84%E7%90%86%E5%9B%BE%E6%A0%87.png" alt=""></p><p>根据报错提示可以看出时无法处理element-icons.ttf文件</p><p>原因时什么呢？</p><p>相信大家都能够知道，这是因为webpack不知道怎么去处理.ttf的文件</p><p>这个时候我们就需要url-loader来帮助我们处理.ttf字体文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//这个时候需要我们去执行npm命令去下载url-loader</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">npm/cnpm install url-loader --save</span></pre></td></tr></table></figure><p>下载完成后  去过你尝试去npm run dev 你会发现还是报和上面相同的错误，这是为什么呢？</p><p>答案当然是因为你没有使用这个加载器（url-loader）</p><p>现在就需要你在<strong><code>webpack.config.js</code></strong>中去配置</p><p>这个配置说句实在的让小编好为难，因为一开始的时候咱也不知道该怎么配置啊，怎么办呢？</p><p>这个时候度娘就显现出来了强大的威力，我开始了百度，看到别人的博客，知道了在<strong><code>rules</code></strong>下配置如下信息</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">     test: <span class="regexp">/\.(woff2?|eot|ttf|otf)(\?.*)?$/</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">        loader: <span class="string">'url-loader'</span>,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p> 别急着运行你的项目———这里有坑</p><p>看图</p><p>此图  是配置信息</p><p><img src="./assets/url-loader-%E9%85%8D%E7%BD%AE%E4%B8%8D%E5%8F%AF%E4%BB%A5.png" alt=""></p><p>此图是运行结果</p><p><img src="./assets/url-loader-%E5%8A%A0%E8%BD%BD%E4%B8%8D%E5%88%B0.png" alt=""></p><p>此时你会发现  不报错了  但是我的图标去哪了？</p><p>当时的小编也不知道啊    可能是被外星人给叼走了</p><p>哈哈   开个玩笑</p><p>经过小编的不懈努力  至于找到了问题的所在</p><p>这个因为没有设置<strong><code>limit</code></strong>选项</p><p>你可能会问这是什么东东</p><p>别急   先来和小编一起看看文档</p><p><img src="./assets/%E6%96%87%E6%A1%A3.png" alt=""></p><p>看图可以看出  是要设置文件的大小的  这个属性的默认值是undefined</p><p>当然    小编怕你有疑问  再给你贴出一副图<br><img src="./asset_img/unde.png" alt=""></p><p>这上面详细写了各个选项的具体功能</p><p>此时的你  应该已经很明确了问题原因的所在 和解决的办法</p><p>此时  就来看看我们伟大的成就吧</p><p>看图   配置</p><p><img src="./assets/url-loader-%E8%A7%A3%E5%86%B3.png" alt=""></p><p>再来看运行的结果   如图：</p><p><img src="./assets/url-loader-%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3.png" alt=""></p><p>此时，问题就完美解决了</p><p>如果能够帮助到你，是小编最大的荣幸</p><p>当然   有 不好的地方  请大家帮忙指出   学习永无止境    </p><p>小编一直认为  人外有人  天外有天    一起学习   共同进步</p><p>让我们共同加油吧！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;elementUI字体图标不显示-完美解决方案&quot;&gt;&lt;a href=&quot;#elementUI字体图标不显示-完美解决方案&quot; class=&quot;headerlink&quot; title=&quot;elementUI字体图标不显示 完美解决方案&quot;&gt;&lt;/a&gt;elementUI字体图标不显示 
      
    
    </summary>
    
    
      <category term="vue" scheme="http://www.blog.geyunjie.com/categories/vue/"/>
    
    
      <category term="javascript" scheme="http://www.blog.geyunjie.com/tags/javascript/"/>
    
      <category term="iconfont" scheme="http://www.blog.geyunjie.com/tags/iconfont/"/>
    
      <category term="vue" scheme="http://www.blog.geyunjie.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>那些不常见，但却非常实用的 css 属性</title>
    <link href="http://www.blog.geyunjie.com/2018/09/16/css-attr-practical/"/>
    <id>http://www.blog.geyunjie.com/2018/09/16/css-attr-practical/</id>
    <published>2018-09-16T13:33:07.000Z</published>
    <updated>2020-07-03T06:05:50.821Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote><p>本文是本人在网络上看到的好的文章，好的 博客等等一切好的东西的地址。</p><p>如有侵犯作者权益的任何行为，请及时与本人沟通，本人将及时处理。</p><p>本人做这篇收集博客的主要初衷是为了自己和小伙伴能够更好的学习复习了解掌握更多的知识。</p><p>如有带来不便，请见谅！</p></blockquote><blockquote><p><a href="https://mp.weixin.qq.com/s/6jt6zSiXEv-y0UoR_aIXFw" target="_blank" rel="noopener">原文链接</a>  如若想看原文。请点击</p></blockquote><h3 id="常见实用的css属性"><a href="#常见实用的css属性" class="headerlink" title="常见实用的css属性"></a>常见实用的css属性</h3><h4 id="1、-webkit-line-clamp"><a href="#1、-webkit-line-clamp" class="headerlink" title="1、-webkit-line-clamp"></a>1、-webkit-line-clamp</h4><blockquote><p>作用： 可以把 块容器 中的内容限制为指定的行数。并且在超过行数后，在最后一行显示”…” </p><p>使用场景： 在文本内容多少不确定，但显示区域确定的时候，一般使用这个属性做限定</p><p>代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">display</span>: <span class="selector-tag">-webkit-box</span>; <span class="comment">/*值必须为-webkit-box或者-webkit-inline-box*/</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">-webkit-box-orient</span>: <span class="selector-tag">vertical</span>; <span class="comment">/*值必须为vertical*/</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">-webkit-line-clamp</span>: 2; <span class="comment">/*值为数字，表示一共显示几行*/</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">overflow</span>: <span class="selector-tag">hidden</span>; <span class="comment">/*超出隐藏。必须设置*/</span></span></pre></td></tr></table></figure><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/-webkit-line-clamp" target="_blank" rel="noopener">查看MDN</a> 请点击</p></blockquote><h4 id="2、all"><a href="#2、all" class="headerlink" title="2、all"></a>2、all</h4><blockquote><p>作用：将除却 unicode-bidi 与 direction 之外的所有属性重设至其初始值，或继承值。</p><p>使用场景： 偶尔看到， 未使用过， 具体不太清楚， 可查看mdn，有例子</p><p>代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">all</span>: <span class="selector-tag">unset</span>; <span class="comment">/*initial | inherit | unset*/</span></span></pre></td></tr></table></figure><ul><li>initial 改变该元素或其父元素的所有属性至初始值。</li><li>inherit 改变该元素或其父元素的所有属性的值至他们的父元素属性的值</li><li>unset 如果该元素的属性的值是可继承的，则改变该元素或该元素的父元素的所有属性的值为他们父元素的属性值，反之则改变为初始值</li></ul><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/all" target="_blank" rel="noopener">查看MDN</a> 请单击</p></blockquote><h4 id="3、box-decoration-break"><a href="#3、box-decoration-break" class="headerlink" title="3、box-decoration-break"></a>3、box-decoration-break</h4><blockquote><p>作用：用来定义当元素跨多行、多列或多页时，元素的片段应如何呈现。</p><ul><li>指定的值将影响以下元素的表现：<ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/background" target="_blank" rel="noopener"><code>background</code></a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/border" target="_blank" rel="noopener"><code>border</code></a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/border-image" target="_blank" rel="noopener"><code>border-image</code></a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/box-shadow" target="_blank" rel="noopener"><code>box-shadow</code></a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/clip-path" target="_blank" rel="noopener"><code>clip-path</code></a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/margin" target="_blank" rel="noopener"><code>margin</code></a></li><li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/padding" target="_blank" rel="noopener"><code>padding</code></a></li></ul></li></ul><p>使用场景：</p><p>代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Keyword values */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">box-decoration-break</span>: <span class="selector-tag">slice</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">box-decoration-break</span>: <span class="selector-tag">clone</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Global values */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">box-decoration-break</span>: <span class="selector-tag">initial</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">box-decoration-break</span>: <span class="selector-tag">inherit</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">box-decoration-break</span>: <span class="selector-tag">unset</span>;</span></pre></td></tr></table></figure><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/box-decoration-break" target="_blank" rel="noopener">查看MDN</a> 请点击</p></blockquote><h4 id="4、caret-color"><a href="#4、caret-color" class="headerlink" title="4、caret-color"></a>4、caret-color</h4><blockquote><p>作用：用来定义插入光标（caret）的颜色，这里说的插入光标，就是那个在网页的可编辑器区域内，用来指示用户的输入具体会插入到哪里的那个一闪一闪的形似竖杠 | 的东西。</p><p>使用场景：改变可编辑区域的插入光标的颜色</p><p>代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">caret-color</span>: <span class="selector-tag">red</span>;</span></pre></td></tr></table></figure><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/caret-color" target="_blank" rel="noopener">查看MDN</a> 请点击</p></blockquote><h4 id="5、clip-path-shape-outside"><a href="#5、clip-path-shape-outside" class="headerlink" title="5、clip-path / shape-outside"></a>5、clip-path / shape-outside</h4><ul><li>clip-path</li></ul><blockquote><p>作用：使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。类似的裁剪还有 svg 的 clipPath。</p><p>取值：clip-path 的取值有以下几种图形</p><ul><li>inset(xxx): 裁剪为长方形</li><li>circle(xx): 裁剪为原型</li><li>ellipse(xxx): 裁剪为椭圆</li><li>polygon(xx): 裁剪为多边形</li><li>none: 不裁剪</li></ul><p>使用场景：对元素进行裁剪时</p><p>代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Keyword values */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">clip-path</span>: <span class="selector-tag">none</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* &lt;clip-source&gt; values */</span> </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">clip-path</span>: <span class="selector-tag">url</span>(<span class="selector-tag">resources</span><span class="selector-class">.svg</span><span class="selector-id">#c1</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* &lt;geometry-box&gt; values */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">clip-path</span>: <span class="selector-tag">margin-box</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">clip-path</span>: <span class="selector-tag">border-box</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">clip-path</span>: <span class="selector-tag">padding-box</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">clip-path</span>: <span class="selector-tag">content-box</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">clip-path</span>: <span class="selector-tag">fill-box</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">clip-path</span>: <span class="selector-tag">stroke-box</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">clip-path</span>: <span class="selector-tag">view-box</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* &lt;basic-shape&gt; values */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">clip-path</span>: <span class="selector-tag">inset</span>(100<span class="selector-tag">px</span> 50<span class="selector-tag">px</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">clip-path</span>: <span class="selector-tag">circle</span>(50<span class="selector-tag">px</span> <span class="selector-tag">at</span> 0 100<span class="selector-tag">px</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">clip-path</span>: <span class="selector-tag">polygon</span>(50% 0%, 100% 50%, 50% 100%, 0% 50%);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">clip-path: path('M0.5,1 C0.5,1,0,0.7,0,0.3 A0.25,0.25,1,1,1,0.5,0.3 A0.25,0.25,1,1,1,1,0.3 C1,0.7,0.5,1,0.5,1 Z');</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Box and shape values combined */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">clip-path</span>: <span class="selector-tag">padding-box</span> <span class="selector-tag">circle</span>(50<span class="selector-tag">px</span> <span class="selector-tag">at</span> 0 100<span class="selector-tag">px</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Global values */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">clip-path</span>: <span class="selector-tag">inherit</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">clip-path</span>: <span class="selector-tag">initial</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">clip-path</span>: <span class="selector-tag">unset</span>;</span></pre></td></tr></table></figure><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/clip-path" target="_blank" rel="noopener">查看MDN</a> 请点击</p></blockquote><ul><li>shape-outside</li></ul><blockquote><p>定义：定义了一个可以是非矩形的形状，相邻的内联内容应围绕该形状进行包装。 默认情况下，内联内容包围其边距框; <code>shape-outside</code>提供了一种自定义此包装的方法，可以将文本包装在复杂对象周围而不是简单的框中。</p><p>作用：属性指定使用下面列表的值来定义浮动元素的浮动区域。这个浮动区域决定了行内内容（浮动元素）所包裹的形状。</p><p>取值：详细请查看<strong>MDN</strong></p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 关键字值 */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">shape-outside</span>: <span class="selector-tag">none</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">shape-outside</span>: <span class="selector-tag">margin-box</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">shape-outside</span>: <span class="selector-tag">content-box</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">shape-outside</span>: <span class="selector-tag">border-box</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">shape-outside</span>: <span class="selector-tag">padding-box</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 函数值 */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">shape-outside</span>: <span class="selector-tag">circle</span>();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">shape-outside</span>: <span class="selector-tag">ellipse</span>();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">shape-outside</span>: <span class="selector-tag">inset</span>(10<span class="selector-tag">px</span> 10<span class="selector-tag">px</span> 10<span class="selector-tag">px</span> 10<span class="selector-tag">px</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">shape-outside</span>: <span class="selector-tag">polygon</span>(10<span class="selector-tag">px</span> 10<span class="selector-tag">px</span>, 20<span class="selector-tag">px</span> 20<span class="selector-tag">px</span>, 30<span class="selector-tag">px</span> 30<span class="selector-tag">px</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* &lt;url&gt; 值 */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">shape-outside</span>: <span class="selector-tag">url</span>(<span class="selector-tag">image</span><span class="selector-class">.png</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 渐变值 */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">shape-outside</span>: <span class="selector-tag">linear-gradient</span>(45<span class="selector-tag">deg</span>, <span class="selector-tag">rgba</span>(255, 255, 255, 0) 150<span class="selector-tag">px</span>, <span class="selector-tag">red</span> 150<span class="selector-tag">px</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 全局值 */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">shape-outside</span>: <span class="selector-tag">initial</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">shape-outside</span>: <span class="selector-tag">inherit</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">shape-outside</span>: <span class="selector-tag">unset</span>;</span></pre></td></tr></table></figure></blockquote><h4 id="6、object-fit-object-position"><a href="#6、object-fit-object-position" class="headerlink" title="6、object-fit / object-position"></a>6、object-fit / object-position</h4><ul><li><h3 id="object-fit"><a href="#object-fit" class="headerlink" title="object-fit"></a>object-fit</h3></li></ul><blockquote><p>作用：</p><ul><li>指定可替换元素的内容应该如何适应到其使用的高度和宽度确定的框</li><li>可以通过使用 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/object-position" target="_blank" rel="noopener"><code>object-position</code></a> 属性来切换被替换元素的内容对象在元素框内的对齐方式。</li></ul><p>取值：</p><ul><li>contain：被替换的内容将被缩放，以在填充元素的内容框时保持其宽高比。 整个对象在填充盒子的同时保留其长宽比，因此如果宽高比与框的宽高比不匹配，该对象将被添加“<a href="https://zh.wikipedia.org/wiki/%E9%BB%91%E9%82%8A" target="_blank" rel="noopener">黑边</a>”。</li><li>cover：被替换的内容在保持其宽高比的同时填充元素的整个内容框。如果对象的宽高比与内容框不相匹配，该对象将被剪裁以适应内容框</li><li>fill：被替换的内容正好填充元素的内容框。整个对象将完全填充此框。如果对象的宽高比与内容框不相匹配，那么该对象将被拉伸以适应内容框</li><li>none：被替换的内容将保持其原有的尺寸。</li><li>scale-down：内容的尺寸与 <code>none</code> 或 <code>contain</code> 中的一个相同，取决于它们两个之间谁得到的对象尺寸会更小一些。</li></ul><p>案例详情 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/object-fit" target="_blank" rel="noopener">请查看MDN</a></p></blockquote><ul><li>object-position</li></ul><blockquote><p>作用：规定了<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Replaced_element" target="_blank" rel="noopener">可替换元素</a>的内容，在这里我们称其为对象（即 <strong>object-position</strong> 中的 <strong>object）</strong>，在其内容框中的位置。可替换元素的内容框中未被对象所覆盖的部分，则会显示该元素的背景</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* &lt;position&gt; values */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">object-position</span>: <span class="selector-tag">center</span> <span class="selector-tag">top</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">object-position</span>: 100<span class="selector-tag">px</span> 50<span class="selector-tag">px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Global values */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">object-position</span>: <span class="selector-tag">inherit</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">object-position</span>: <span class="selector-tag">initial</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">object-position</span>: <span class="selector-tag">unset</span>;</span></pre></td></tr></table></figure><p>取值：</p><p>position:使用 1 到 4 个值来定义该元素在它所处的二维平面中的定位。可以使用相对或绝对偏移</p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/object-position" target="_blank" rel="noopener">详情请点击MDN</a></p></blockquote><h4 id="7、font-stretch"><a href="#7、font-stretch" class="headerlink" title="7、font-stretch"></a>7、font-stretch</h4><blockquote><p>作用：为字体定义一个正常或经过伸缩变形的字体外观，它仅仅意味着当有多种字体可供选择时，会为字体选择最适合的大小。</p><p>语法：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Keyword values */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">font-stretch</span>: <span class="selector-tag">ultra-condensed</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">font-stretch</span>: <span class="selector-tag">extra-condensed</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">font-stretch</span>: <span class="selector-tag">condensed</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">font-stretch</span>: <span class="selector-tag">semi-condensed</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">font-stretch</span>: <span class="selector-tag">normal</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">font-stretch</span>: <span class="selector-tag">semi-expanded</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">font-stretch</span>: <span class="selector-tag">expanded</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">font-stretch</span>: <span class="selector-tag">extra-expanded</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">font-stretch</span>: <span class="selector-tag">ultra-expanded</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Global values */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">font-stretch</span>: <span class="selector-tag">inherit</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">font-stretch</span>: <span class="selector-tag">initial</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">font-stretch</span>: <span class="selector-tag">unset</span>;</span></pre></td></tr></table></figure><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/font-stretch" target="_blank" rel="noopener">查看详情请点击MDN</a></p></blockquote><h4 id="8、max-content-min-content-fill-available-fit-content"><a href="#8、max-content-min-content-fill-available-fit-content" class="headerlink" title="8、max-content / min-content / fill-available / fit-content"></a>8、max-content / min-content / fill-available / fit-content</h4><blockquote><p>这几个值都可用在 width, height, min-width, min-height, max-width 和 max-height 属性上。</p><p>display 必须为 inline-block 或者 block，否则上面的值不起作用。</p><ul><li><p><strong>fill-available</strong></p><p>元素撑满可用空间。参考的基准为父元素有多宽多高。</p><p>类似子元素的 div 撑满父元素的宽，fill-available 不仅可以撑满宽还能撑满高</p></li><li><h5 id="max-content"><a href="#max-content" class="headerlink" title="max-content"></a>max-content</h5><p>它的宽度或者高度，会自动调整为，刚刚好容纳下子元素中那个长度最长(按照文字不换行时计算)的元素即可。<br>参考的基准为子元素有多宽多高。</p></li><li><h5 id="min-content"><a href="#min-content" class="headerlink" title="min-content"></a>min-content</h5><p>它的宽度或者高度，会自动调整为，刚刚好容纳下子元素中那个“最小宽度值”最大的元素即可，剩余超长的要么换行，要么溢出<br>参考的基准为子元素“最小宽度值”有多宽多高。</p><p>什么是“最小宽度值”？<br>比如图片，最小宽度值，就是图片原始的宽高；如果是一串中文，则最小宽度值为单个汉字的宽高；如果是一串英文，则最小宽度值为里面单词最长的那个。</p></li><li><h5 id="fit-content"><a href="#fit-content" class="headerlink" title="fit-content"></a>fit-content</h5><p>表示元素自动伸缩到内容的宽度，和 max-content 的区别为，都是刚刚好容纳下子元素中那个长度最长的元素即可。</p><p>不同的是 max-content 在计算时按照文字不换行时计算，如果超过父元素，则不换行，直接产生滚动条；而 fit-content 在超过父元素后，换行，不产生滚动条。</p></li></ul></blockquote><h4 id="9、fit-content-函数"><a href="#9、fit-content-函数" class="headerlink" title="9、fit-content()函数"></a>9、fit-content()函数</h4><blockquote><p>使用场景：用在 grid 布局当中。</p></blockquote><h4 id="10、resize"><a href="#10、resize" class="headerlink" title="10、resize"></a>10、resize</h4><h4 id="11、scroll-behavior"><a href="#11、scroll-behavior" class="headerlink" title="11、scroll-behavior"></a>11、scroll-behavior</h4><blockquote><p>作用：当用户通过 API 触发滚动操作时，CSS 属性 scroll-behavior 为一个滚动框指定滚动行为， 平滑到达还是立即到达</p></blockquote><h4 id="12、max-min"><a href="#12、max-min" class="headerlink" title="12、max() / min()"></a>12、max() / min()</h4><blockquote><p>max 在两者这件取最大；min 函数在两者之间取最小。</p><p>max，min 可以用在任何可以设置 <length>, <frequency>, <angle>, <time>, <percentage>, <number>, or <integer> 等值的地方</p></blockquote><h4 id="13、clamp"><a href="#13、clamp" class="headerlink" title="13、clamp()"></a>13、clamp()</h4><blockquote><p>作用：clamp 函数会在定义的 三个值之间，取中间的那个值，是大小在中间，不是位置在中间，</p><p>语法：clamp(MIN, VAL, MAX)</p><p>使用场景：和 max，min 函数一样，可以用在任何可以设置 <length>, <frequency>, <angle>, <time>, <percentage>, <number>, or <integer> 等值的地方</p></blockquote><h4 id="14、conic-gradient"><a href="#14、conic-gradient" class="headerlink" title="14、conic-gradient()"></a>14、conic-gradient()</h4><blockquote><p>作用：”锥形渐变”。它是围绕中心点按照扇形方向进行旋转的渐变(而不是从中心点辐射)</p></blockquote><h4 id="15、-out-of-range-in-range"><a href="#15、-out-of-range-in-range" class="headerlink" title="15、:out-of-range / :in-range"></a>15、:out-of-range / :in-range</h4><h4 id="16、writing-mode"><a href="#16、writing-mode" class="headerlink" title="16、writing-mode"></a>16、writing-mode</h4><blockquote><p>作用：定义了文本水平或垂直排布以及在块级元素中文本的书写方向</p></blockquote><h4 id="17、inline-size"><a href="#17、inline-size" class="headerlink" title="17、inline-size"></a>17、inline-size</h4><h4 id="18、block-size"><a href="#18、block-size" class="headerlink" title="18、block-size"></a>18、block-size</h4><p>如果能够帮助到你，是小编最大的荣幸</p><p>当然   有 不好的地方  请大家帮忙指出   学习永无止境    </p><p>小编一直认为  人外有人  天外有天    一起学习   共同进步</p><p>让我们共同加油吧！！！</p><p>程序的世界，写作的过程中部分文章难免会参考与借鉴网络上的一些资源、见解。如有侵权请与作者联系。如若如实侵权，文章会在24小时内删除。如若由于部分文章存在侵权行为给您带来不便还请见谅。</p><p>本博客仅仅为自己以及前端爱好者提供便利，不做任何商业用途。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;本文是本人在网络上看到的好的文章，好的 博客等等一切好的东西的地址。&lt;/p&gt;
&lt;p&gt;如有侵犯作者权益的任何行为，请
      
    
    </summary>
    
    
      <category term="css" scheme="http://www.blog.geyunjie.com/categories/css/"/>
    
    
      <category term="css" scheme="http://www.blog.geyunjie.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>好的文章 好的博客  好的语录等等</title>
    <link href="http://www.blog.geyunjie.com/2018/09/12/classic-article/"/>
    <id>http://www.blog.geyunjie.com/2018/09/12/classic-article/</id>
    <published>2018-09-12T13:33:07.000Z</published>
    <updated>2020-07-03T09:39:37.489Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote><p>本文是本人在网络上看到的好的文章，好的 博客等等一切好的东西的地址。</p><p>如有侵犯作者权益的任何行为，请及时与本人沟通，本人将及时处理。</p><p>本人做这篇收集博客的主要初衷是为了自己和小伙伴能够更好的学习复习了解掌握更多的知识。</p><p>如有带来不便，请见谅！</p></blockquote><h3 id="html篇"><a href="#html篇" class="headerlink" title="html篇"></a>html篇</h3><h3 id="css篇"><a href="#css篇" class="headerlink" title="css篇"></a>css篇</h3><h3 id="js篇"><a href="#js篇" class="headerlink" title="js篇"></a>js篇</h3><h3 id="nodejs篇"><a href="#nodejs篇" class="headerlink" title="nodejs篇"></a>nodejs篇</h3><h3 id="vue篇"><a href="#vue篇" class="headerlink" title="vue篇"></a>vue篇</h3><h4 id="1-vue-js-组件复用和扩展之道"><a href="#1-vue-js-组件复用和扩展之道" class="headerlink" title="1.vue.js 组件复用和扩展之道"></a>1.<a href="https://www.jianshu.com/p/acee66d4db3a" target="_blank" rel="noopener">vue.js 组件复用和扩展之道</a></h4><h4 id="2-你可能不知道的一些Vue实战技巧"><a href="#2-你可能不知道的一些Vue实战技巧" class="headerlink" title="2.你可能不知道的一些Vue实战技巧"></a>2.<a href="https://mp.weixin.qq.com/s?__biz=MzIyMDkwODczNw==&mid=2247487902&idx=1&sn=9ab3d1400b0452717e32300da10de774&chksm=97c58c30a0b205262c6ac60b02a670cd55d951a169cd8a2e7f6301ea83c1f7615ff0d7c528fc&scene=21#wechat_redirect" target="_blank" rel="noopener">你可能不知道的一些Vue实战技巧</a></h4><h3 id="代码整洁之道"><a href="#代码整洁之道" class="headerlink" title="代码整洁之道"></a>代码整洁之道</h3><h4 id="1-编写自文档化JavaScript的15种方法"><a href="#1-编写自文档化JavaScript的15种方法" class="headerlink" title="1.编写自文档化JavaScript的15种方法"></a>1.<a href="https://www.jianshu.com/p/1a1a7c56605f" target="_blank" rel="noopener">编写自文档化JavaScript的15种方法</a></h4><h3 id="MAC-篇"><a href="#MAC-篇" class="headerlink" title="MAC 篇"></a>MAC 篇</h3><h4 id="1、Mac-键盘快捷键"><a href="#1、Mac-键盘快捷键" class="headerlink" title="1、Mac 键盘快捷键"></a>1、<a href="https://support.apple.com/zh-cn/HT201236" target="_blank" rel="noopener">Mac 键盘快捷键</a></h4><h3 id="性能优化"><a href="#性能优化" class="headerlink" title="性能优化"></a>性能优化</h3><p>1.<a href="https://www.jianshu.com/p/c684b8ff14d3" target="_blank" rel="noopener">第51期 网易云音乐前端性能监控实践 &amp; 那些不常见却非常实用的css属性 &amp; 携程RN渲染性能优化实践</a></p><p>注意：部分文章可能会在不就的将来更新</p><p>如果能够帮助到你，是小编最大的荣幸</p><p>当然   有 不好的地方  请大家帮忙指出   学习永无止境    </p><p>小编一直认为  人外有人  天外有天    一起学习   共同进步</p><p>让我们共同加油吧！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;本文是本人在网络上看到的好的文章，好的 博客等等一切好的东西的地址。&lt;/p&gt;
&lt;p&gt;如有侵犯作者权益的任何行为，请
      
    
    </summary>
    
    
      <category term="css" scheme="http://www.blog.geyunjie.com/categories/css/"/>
    
    
      <category term="css" scheme="http://www.blog.geyunjie.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>css 中间文字 两端横线</title>
    <link href="http://www.blog.geyunjie.com/2018/09/12/css-line-text/"/>
    <id>http://www.blog.geyunjie.com/2018/09/12/css-line-text/</id>
    <published>2018-09-12T13:33:07.000Z</published>
    <updated>2020-07-07T01:41:23.654Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote><p>本人水平有限，文章内容难免会出现问题，如果有问题欢迎指出，谢谢</p></blockquote><h3 id="方式一-为元素加定位的方式"><a href="#方式一-为元素加定位的方式" class="headerlink" title="方式一 为元素加定位的方式"></a>方式一 为元素加定位的方式</h3><blockquote><p>dome链接地址 <a href="http://www.example.geyunjie.com/css/line" target="_blank" rel="noopener">http://www.example.geyunjie.com/css/line</a></p></blockquote><blockquote><p>html 代码</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"dome1"</span>&gt;</span>测试一下<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></pre></td></tr></table></figure><blockquote><p>css 代码</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span>&gt;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-class">.dome1</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">       <span class="attribute">text-align</span>: center;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        <span class="attribute">position</span>: relative;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-class">.dome1</span><span class="selector-pseudo">::after</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        <span class="attribute">position</span>: absolute;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">        <span class="attribute">content</span>: <span class="string">""</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">        <span class="attribute">display</span>: block;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">        <span class="attribute">width</span>: <span class="number">40%</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">        <span class="attribute">height</span>: <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#eee</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">        <span class="attribute">top</span>: <span class="number">50%</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">        <span class="attribute">left</span>: <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">    <span class="selector-class">.dome1</span><span class="selector-pseudo">::before</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        <span class="attribute">position</span>: absolute;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        <span class="attribute">content</span>: <span class="string">""</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">        <span class="attribute">display</span>: block;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        <span class="attribute">width</span>: <span class="number">40%</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">        <span class="attribute">height</span>: <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">        <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#eee</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">        <span class="attribute">top</span>: <span class="number">50%</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line">        <span class="attribute">right</span>: <span class="number">0</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">&lt;/style&gt;</span></pre></td></tr></table></figure><p>注意：部分文章可能会在不就的将来更新</p><p>如果能够帮助到你，是小编最大的荣幸</p><p>当然   有 不好的地方  请大家帮忙指出   学习永无止境    </p><p>小编一直认为  人外有人  天外有天    一起学习   共同进步</p><p>让我们共同加油吧！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;本人水平有限，文章内容难免会出现问题，如果有问题欢迎指出，谢谢&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=
      
    
    </summary>
    
    
      <category term="css" scheme="http://www.blog.geyunjie.com/categories/css/"/>
    
    
      <category term="css" scheme="http://www.blog.geyunjie.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>CommonJS, AMD, CMD的区别</title>
    <link href="http://www.blog.geyunjie.com/2018/08/15/amdcmdcom/"/>
    <id>http://www.blog.geyunjie.com/2018/08/15/amdcmdcom/</id>
    <published>2018-08-15T10:54:07.000Z</published>
    <updated>2020-01-16T03:14:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>CommonJS, AMD, CMD都是JS模块化的规范。<br>CommonJS是服务器端js模块化的规范，NodeJS是这种规范的实现。<br>AMD(异步模块定义)和CMD(通用模块定义)都是浏览器端js模块化的规范。RequireJS 遵循的是 AMD，SeaJS 遵循的是 CMD</p><h2 id="CommonJS（同步模块定义）"><a href="#CommonJS（同步模块定义）" class="headerlink" title="CommonJS（同步模块定义）"></a><strong>CommonJS（同步模块定义）</strong></h2><p>一个单独的文件就是一个模块<br>加载模块使用require方法，该方法读取一个文件并执行，最后返回文件内部的exports对象<br>所以，定义一个模块就是写一个新的js文件，但是最后要将文件的内容exports出来</p><ul><li>如何定义模块和加载模块？</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义一个module.js文件</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> A = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    <span class="built_in">console</span>.log(<span class="string">'我是定义的模块'</span>);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * 导出这个模块</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * 1.第一种返回方式 module.exports = A; </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * 2.第二种返回方式 module.exports.test = A</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * 3.第三种返回方式 exports.test = A;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * 注意：module.exports导出方式   与    exports导出方式是有区别的</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> *      具体区别详见其他文章</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">exports.test = A;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//再写一个dome.js文件，导入刚才定义好的模块</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="built_in">module</span> = <span class="built_in">require</span>(<span class="string">"./module"</span>);  <span class="comment">//加载这个模块  require中是导入模块的路径   前面的变量名自定义  代表的是导入模块所导出的对象</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 调用这个模块，不同的返回方式用不同的方式调用</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * 1.第一种调用方式 module();</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * 2.第二种调用方式 module.test();</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.test();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/* </span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * 接下来我们去执行这个文件，前提是你本地要安装node.js</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> * 首先打开cmd, cd到这个文件所在的目录下,执行: node dome.js</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line"><span class="comment"> */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">node dome.js</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//输出结果：我是定义的模块</span></span></pre></td></tr></table></figure><p>以上就是CommonJS规范下的模块定义与加载的形式</p><p>注意： CommonJS 加载模块是同步的，所以只有加载完成才能执行后面的操作</p><p>​    因此  -&gt;  像Node.js比较适用CommonJS的原因在于：Node.js主要用于服务器的编程，加载的模块文件一般都已经存在本地硬盘，所以加载起来比较快，不用考虑异步加载的方式</p><p>​    而  -&gt;  浏览器环境  则  不适合适用CommonJS，原因在于浏览器环境要从服务器加载模块，这是就必须采用异步模式。所以就有了 AMD CMD 解决方案</p><h2 id="AMD（异步模块定义）"><a href="#AMD（异步模块定义）" class="headerlink" title="AMD（异步模块定义）**"></a><strong>AMD</strong>（异步模块定义）**</h2><p>AMD规范通过define方法去定义模块，通过require方法去加载模块。RequireJS实现了这种规范</p><p>AMD只有一个接口：define(id?,dependencies?,factory); 它要在声明模块的时候制定所有的依赖(dep)，并且还要当做形参传到factory中。要是没什么依赖，就定义简单的模块（或者叫独立的模块</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//编写一个module1.js文件</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义独立的模块</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">define(&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    methodA: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">        <span class="built_in">console</span>.log(<span class="string">'我是module1的methodA'</span>);    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">    &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">    methodB: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">        <span class="built_in">console</span>.log(<span class="string">'我是module1的methodB'</span>);    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//编写一个module2.js文件</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//另一种定义独立模块的方式</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">define(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">        methodA: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">            <span class="built_in">console</span>.log(<span class="string">'我是module2的methodA'</span>);    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">        &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">        methodB: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">            <span class="built_in">console</span>.log(<span class="string">'我是module2的methodB'</span>);    </span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">    &#125;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">25</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//编写一个module3.js文件</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">26</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义非独立的模块（这个模块依赖其他模块）</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">27</span></pre></td><td class="code"><pre><span class="line">define([<span class="string">'module1'</span>, <span class="string">'module2'</span>], <span class="function"><span class="keyword">function</span>(<span class="params">m1, m2</span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">28</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">29</span></pre></td><td class="code"><pre><span class="line">        methodC: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">30</span></pre></td><td class="code"><pre><span class="line">            m1.methodA();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">31</span></pre></td><td class="code"><pre><span class="line">            m2.methodB();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">32</span></pre></td><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">33</span></pre></td><td class="code"><pre><span class="line">    &#125;;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">34</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">35</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">36</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">37</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//再定义一个main.js，去加载这些个模块</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">38</span></pre></td><td class="code"><pre><span class="line"><span class="built_in">require</span>([<span class="string">'module3'</span>], <span class="function"><span class="keyword">function</span>(<span class="params">m3</span>)</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">39</span></pre></td><td class="code"><pre><span class="line">    m3.methodC();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">40</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">41</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">42</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//我们在一个html文件中去通过RequireJS加载这个main.js</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">43</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//等号右边的main指的main.js</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">44</span></pre></td><td class="code"><pre><span class="line">&lt;script data-main=<span class="string">"main"</span> src=<span class="string">"require.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">45</span></pre></td><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">46</span></pre></td><td class="code"><pre><span class="line"><span class="comment">//浏览器控制台输出结果</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">47</span></pre></td><td class="code"><pre><span class="line">我是module1的methodA</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">48</span></pre></td><td class="code"><pre><span class="line">我是module2的methodB</span></pre></td></tr></table></figure><h2 id="CMD（通用模块定义）"><a href="#CMD（通用模块定义）" class="headerlink" title="CMD（通用模块定义）"></a><strong>CMD（通用模块定义）</strong></h2><p>CMD是SeaJS 在推广过程中对模块定义的规范化产出</p><p>AMD和CMD的区别：</p><ol><li>对于依赖的模块，AMD 是提前执行，CMD 是延迟执行。不过 RequireJS 从 2.0 开始，也改成可以延迟执行（根据写法不同，处理方式不同）。CMD 推崇 as lazy as possible（尽可能的懒加载，也称为延迟加载，即在需要的时候才加载）。</li><li>CMD 推崇依赖就近，AMD 推崇依赖前置。虽然 AMD 也支持 CMD 的写法，同时还支持将 require 作为依赖项传递，但 RequireJS 的作者默认是最喜欢上面的写法，也是官方文档里默认的模块定义写法。</li><li>AMD 的 API 默认是一个当多个用，CMD 的 API 严格区分，推崇职责单一。比如 AMD 里，require 分全局 require 和局部 require，都叫 require。CMD 里，没有全局 require，而是根据模块系统的完备性，提供 seajs.use 来实现模块系统的加载启动。CMD 里，每个 API 都简单纯粹。</li></ol><p>注意：部分文章可能会在不就的将来更新</p><p>如果能够帮助到你，是小编最大的荣幸</p><p>当然   有 不好的地方  请大家帮忙指出   学习永无止境    </p><p>小编一直认为  人外有人  天外有天    一起学习   共同进步</p><p>让我们共同加油吧！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;CommonJS, AMD, CMD都是JS模块化的规范。&lt;br&gt;CommonJS是服务器端js模块化的规范，NodeJS是这种规范的实现。&lt;br&gt;AMD(异步模块定义)和CMD(通用模块定义)都是浏览器端js模块化的规范。RequireJS 遵循的是 AMD，SeaJS 
      
    
    </summary>
    
    
      <category term="common.js" scheme="http://www.blog.geyunjie.com/categories/common-js/"/>
    
    
      <category term="common.js" scheme="http://www.blog.geyunjie.com/tags/common-js/"/>
    
      <category term="cmd" scheme="http://www.blog.geyunjie.com/tags/cmd/"/>
    
      <category term="amd" scheme="http://www.blog.geyunjie.com/tags/amd/"/>
    
  </entry>
  
  <entry>
    <title>vue基础 一 之 指令</title>
    <link href="http://www.blog.geyunjie.com/2018/08/15/vue-1/"/>
    <id>http://www.blog.geyunjie.com/2018/08/15/vue-1/</id>
    <published>2018-08-15T10:54:07.000Z</published>
    <updated>2020-03-24T02:33:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="vue基础指令以及案例"><a href="#vue基础指令以及案例" class="headerlink" title="vue基础指令以及案例"></a>vue基础指令以及案例</h2><h3 id="v-html与v-text"><a href="#v-html与v-text" class="headerlink" title="v-html与v-text"></a>v-html与v-text</h3><ul><li>v-html 可以渲染标签   但存在隐患    在敏感的地方使用可能会造成 跨站脚本攻击</li><li>v-text 会直接把标签当成文本渲染</li></ul><h3 id="v-cloak"><a href="#v-cloak" class="headerlink" title="v-cloak"></a>v-cloak</h3><ul><li>v-cloak 的作用是阻止页面在mounted之前渲染标签内的数据   也就是说在插值表达式没有被替换之前，不渲染页面</li></ul><h3 id="v-bind-与-v-on"><a href="#v-bind-与-v-on" class="headerlink" title="v-bind 与 v-on"></a>v-bind 与 v-on</h3><ul><li>v-bind 绑定属性   缩写为  ：</li><li>v-on 绑定事件     缩写为 @</li></ul><p><a href="http://www.example.geyunjie.com/vue/跑马灯效果.html" target="_blank" rel="noopener">跑马灯例子</a></p><h3 id="事件修饰符"><a href="#事件修饰符" class="headerlink" title="事件修饰符"></a>事件修饰符</h3><ul><li>.stop 阻止事件冒泡</li><li>.prevent 阻止默认事件（阻止默认行为）</li><li>.capture 实现捕获触发事件</li><li>.self 只有点击自己的时候才会触发</li><li>.once 只触发一次</li></ul><h4 id="stop-和-self-的区别"><a href="#stop-和-self-的区别" class="headerlink" title=".stop 和 .self 的区别"></a>.stop 和 .self 的区别</h4><ul><li>相同点：都能阻止冒泡</li><li>不同点：stop阻止所有的事件冒泡   self只阻止了自己的事件冒泡（其他组件还是会冒泡）</li></ul><h3 id="v-model"><a href="#v-model" class="headerlink" title="v-model"></a>v-model</h3><p>实现表单元素 和model 中的数据双向绑定  只能使用在  表单元素中</p><p>是v-on 和 v-bind 在表单上同时使用时的 语法糖</p><p><a href="http://www.example.geyunjie.com/vue/简易计算器.html" target="_blank" rel="noopener">简易计算器</a></p><h3 id="样式绑定"><a href="#样式绑定" class="headerlink" title="样式绑定"></a>样式绑定</h3><h4 id="使用class绑定样式"><a href="#使用class绑定样式" class="headerlink" title="使用class绑定样式"></a>使用class绑定样式</h4><ul><li>数组：<h1 :class="['red','thin']">这是一个可爱的h1</h1></li><li>数组中使用三元表达式：<h1 :class="['red','thin',isactive?'active':'']">这是一个可爱的h1</h1></li><li>数组中嵌套对象：<h1 :class="['red','thin',{'cative':isactive}]">这是一个可爱的h1</h1></li><li>直接使用对象：<h1 :class="{red:ture,active:ture}">这是一个可爱的h1</h1></li></ul><h4 id="使用style-内联样式"><a href="#使用style-内联样式" class="headerlink" title="使用style 内联样式"></a>使用style 内联样式</h4><ul><li>对象：<h1 :style="{color:'red'}">这是一个可爱的h1</h1></li><li>定义到data中  直接  :style 引用</li><li>以数组的形式   引用多个  data  字段</li></ul><h3 id="v-for-与-：key"><a href="#v-for-与-：key" class="headerlink" title="v-for 与  ：key"></a>v-for 与  ：key</h3><p>用于编辑数组或对象</p><ul><li>数组：<h1 v-for='(item,index) in data' :key='index'>这是一个可爱的h1</h1></li><li>对象：<h1 v-for='(val,key,inde) in data' :key='key'>这是一个可爱的h1</h1></li><li>对象数组：<h1 v-for='item in data' :key='item.id'>这是一个可爱的h1</h1></li><li>遍历数字：。。。</li><li>vue2.0之后，必须给每一项绑定一个key    key绑定的值只能是数字或字符串（string、number）</li></ul><p>key的作用是给每一项一个唯一的标识，能够节省性能</p><h3 id="v-if-和v-show-控制元素的显示或隐藏"><a href="#v-if-和v-show-控制元素的显示或隐藏" class="headerlink" title="v-if 和v-show 控制元素的显示或隐藏"></a>v-if 和v-show 控制元素的显示或隐藏</h3><ul><li>v-if：控制元素时候渲染dom节点   每次都会创建或者删除dom节点    有较高的切换性能消耗</li><li>v-show：控制元素的dispaly：none；  使元素显示或隐藏   有较高的初始渲染消耗</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;vue基础指令以及案例&quot;&gt;&lt;a href=&quot;#vue基础指令以及案例&quot; class=&quot;headerlink&quot; title=&quot;vue基础指令以及案例&quot;&gt;&lt;/a&gt;vue基础指令以及案例&lt;/h2&gt;&lt;h3 id=&quot;v-html与v-text&quot;&gt;&lt;a href=&quot;#v-ht
      
    
    </summary>
    
    
      <category term="vue" scheme="http://www.blog.geyunjie.com/categories/vue/"/>
    
    
      <category term="vue" scheme="http://www.blog.geyunjie.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>布局</title>
    <link href="http://www.blog.geyunjie.com/2018/07/13/layout/"/>
    <id>http://www.blog.geyunjie.com/2018/07/13/layout/</id>
    <published>2018-07-12T16:00:00.000Z</published>
    <updated>2020-02-26T17:01:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>布局，是每个前端工程师的基本功。结合自己的学习，总结一下自己所了解的一些比较重要的关于布局的一些知识</p><p>比如：两栏布局，三栏布局（统称为多栏布局），等高布局等等</p><h2 id="两栏布局"><a href="#两栏布局" class="headerlink" title="两栏布局"></a>两栏布局</h2><h3 id="定宽做法"><a href="#定宽做法" class="headerlink" title="定宽做法"></a>定宽做法</h3><p>css代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">background-color</span>: <span class="number">#008c8c</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.aside</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">float</span>: left;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">background-color</span>: brown;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.main</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">float</span>: right;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">background-color</span>: blueviolet;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">width</span>: <span class="number">1000px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">content</span>: <span class="string">''</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">display</span>: block;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">clear</span>: both;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>html代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container clearfix"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">aside</span> <span class="attr">class</span>=<span class="string">"aside"</span>&gt;</span>lorem*10<span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span>Lorem*10<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></pre></td></tr></table></figure><p>效果图</p><p><img src="./1.png" alt=""></p><p>注意：</p><ul><li>html中的 <strong>lorem*10是乱数假文，是代替文字的。偷懒使用一下</strong> ，在你需要使用的时候，在编辑器中输入<strong>lorem*10</strong>就会出现图片上的那些英文</li><li>现在实现的两栏布局是定宽的。但是，很多时候的业务需求可能是主体区域是不定宽的</li></ul><h3 id="不定宽做法"><a href="#不定宽做法" class="headerlink" title="不定宽做法"></a>不定宽做法</h3><p>只需要把主体区域的定宽的属性删除，把浮动属性删除，添加上<strong>overflow: hidden</strong>属性即可</p><p>css代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">background-color</span>: <span class="number">#008c8c</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.aside</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">float</span>: left;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">background-color</span>: brown;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.main</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"> <span class="attribute">-float</span>: right;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">background-color</span>: blueviolet;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"> <span class="attribute">-width</span>: <span class="number">1000px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"> +overflow: hidden;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">content</span>: <span class="string">''</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">display</span>: block;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">clear</span>: both;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>减号代表删除的代码，加号代表添加的代码</p><p>html代码不变</p><p>效果图不再展示，因为展示的话需要gif动态图，制作太繁琐。如需看效果，只需要把代码粘过去运行即可</p><p><strong>注意：要想知道为什么加了overflow: hidden属性后可以实现这种效果，请详细了解块级格式化上下文（简称：BFC），其他文章有详细介绍。html部分，需要（必须）把浮动元素放在前面</strong></p><p>可能你会遇到这种问题：两个区域距离太近，想让中间有缝隙，这该怎么做呢？</p><p>答：</p><ul><li>设置浮动元素的外边距即可，那边需要缝隙，就写那边的外边距。</li><li>如果你设置的不是浮动元素，还要与浮动之间有距离，那你就<strong>必须设置你想要的距离加上浮动元素的宽度</strong></li></ul><h2 id="三栏布局"><a href="#三栏布局" class="headerlink" title="三栏布局"></a>三栏布局</h2><p>三栏布局的原理：三栏布局以及多栏布局的思想和两栏布局相同。</p><p>css代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">background-color</span>: <span class="number">#008c8c</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.left</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">float</span>: left;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">background-color</span>: brown;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">margin-right</span>: <span class="number">20px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.main</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">background-color</span>: blueviolet;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">overflow</span>: hidden;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.right</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">float</span>: right;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">background-color</span>: yellow;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">margin-left</span>: <span class="number">20px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">content</span>: <span class="string">''</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">22</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">display</span>: block;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">23</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">clear</span>: both;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">24</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>html代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container clearfix"</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">aside</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span>Lorem<span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">aside</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span>Lorem<span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span>Lorem<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></pre></td></tr></table></figure><p>效果图：</p><p><img src="./2.png" alt=""></p><p>注意：上面代码为自适应的布局</p><h2 id="等高布局"><a href="#等高布局" class="headerlink" title="等高布局"></a>等高布局</h2><h3 id="方式一-：-CSS3的弹性盒模型"><a href="#方式一-：-CSS3的弹性盒模型" class="headerlink" title="方式一 ： CSS3的弹性盒模型"></a>方式一 ： CSS3的弹性盒模型</h3><h3 id="方式二-：-javascript控制"><a href="#方式二-：-javascript控制" class="headerlink" title="方式二 ： javascript控制"></a>方式二 ： javascript控制</h3><h3 id="方式三-：-伪等高"><a href="#方式三-：-伪等高" class="headerlink" title="方式三 ： 伪等高"></a>方式三 ： 伪等高</h3><p>核心思路：</p><ol><li>给非主体盒子设置一个主体盒子永远都不可能超出的高度</li><li>给非主体盒子设置一个下外边距为  高度  减去  需要显示的非主体盒子的其他盒子的最大高度   的负边距。例如下面代码：margin-bottom: -（10000-710）px。此时，清除浮动的伪元素必定会在次处或以下</li><li>给总体大盒子设置为overflow: hidden，让超出的隐藏。</li><li>这样，当主体内容足够多时，其他区域就会以背景图的方式显示</li></ol><p>缺点：必须要精确的得知侧边栏的高度，以防止主体区域内容过少，使其他的盒子显示不全</p><p>css代码</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.container</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">background-color</span>: <span class="number">#008c8c</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  overflow: hidden;//+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.left</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">float</span>: left;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">background-color</span>: brown;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">margin-right</span>: <span class="number">20px</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">  height: 10000px;//+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">  margin-bottom: -9290px;//+</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.main</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">background-color</span>: blueviolet;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">overflow</span>: hidden;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">content</span>: <span class="string">''</span>;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">19</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">display</span>: block;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">20</span></pre></td><td class="code"><pre><span class="line">  <span class="attribute">clear</span>: both;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">21</span></pre></td><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><p>html代码与两栏布局相同</p><p>演示就不再次演示了    大家可以实操练习下</p><p>多栏布局都可以使用这种思想做</p><p>注意：这种方式实现的并不是真正的等高，而是伪等高，就是看着是等高，其实不是</p><h2 id="html元素的书写顺序"><a href="#html元素的书写顺序" class="headerlink" title="html元素的书写顺序"></a>html元素的书写顺序</h2><p>必须先写浮动元素，然后再写自适应元素</p><p>原因：如果先写自适应元素，自适应元素是常规流盒子，默认是撑满屏幕的。然后，下面再使用浮动元素的时候，浮动元素会避开标准流盒子。就会导致，自适应的盒子再顶部，浮动的元素在下面</p><p>27分</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;布局，是每个前端工程师的基本功。结合自己的学习，总结一下自己所了解的一些比较重要的关于布局的一些知识&lt;/p&gt;
&lt;p&gt;比如：两栏布局，三栏布局（统称为多栏布局），等高布局等等&lt;/p&gt;
&lt;h2 id=&quot;两栏布局&quot;&gt;&lt;a href=&quot;#两栏布局&quot; class=&quot;headerlin
      
    
    </summary>
    
    
      <category term="html" scheme="http://www.blog.geyunjie.com/categories/html/"/>
    
      <category term="css" scheme="http://www.blog.geyunjie.com/categories/html/css/"/>
    
    
      <category term="html，css" scheme="http://www.blog.geyunjie.com/tags/html%EF%BC%8Ccss/"/>
    
  </entry>
  
  <entry>
    <title>获取url的各个参数的值</title>
    <link href="http://www.blog.geyunjie.com/2018/05/12/qureyUrlParams/"/>
    <id>http://www.blog.geyunjie.com/2018/05/12/qureyUrlParams/</id>
    <published>2018-05-12T03:33:07.000Z</published>
    <updated>2020-01-17T03:30:34.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>由于下面的代码用的是简写的方式  为了所有人都能看得懂   或者说即使看不懂   看到思路  根据思路也能实现、<br>所以写了以下的个人思路  有不好的  请私信我   对于私信的人  感激不尽  因为的你私信会让小编更上一层楼</p><blockquote><ol><li>定义一个url地址（就是确定要 解析的url地址）</li><li>定义一个方法用来解析参数</li><li>方法：先创建一个对象，用于存放参数的键值对</li><li>方法：先判断传入的参数是否为空   为空  直接返回一个空对象，不为空  进行解析</li><li>方法：使用split方法把  ？  符号之前的数据剔除</li><li>方法：使用split方法把数据以  &amp;  作为切割点  切割成数组</li><li>方法：使用forEach对切割好的数组进行遍历</li><li>方法：再次使用split方法 把遍历的每一项 以  =  进行分割   分割成的数组的第一项作为 key 属性  第二项作为  value  属性  存放到之前定义好的 空对象中</li><li>方法：返回这个对象</li></ol></blockquote><h3 id="具体实现代码"><a href="#具体实现代码" class="headerlink" title="具体实现代码"></a>具体实现代码</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义一个需要传递的URL</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">const</span> url = <span class="string">'https://www.baidu.com/s?ie=utf-8&amp;f=8&amp;rsv_bp=1&amp;tn=baidu'</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  <span class="comment">/*</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line"><span class="comment">   * str =&gt;需要解析的url</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line"><span class="comment">   * 返回的是一个解析好的对象</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line"><span class="comment">   * &#123;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line"><span class="comment">    f: "8"</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line"><span class="comment">    ie: "utf-8"</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line"><span class="comment">    rsv_bp: "1"</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line"><span class="comment">    tn: "baidu"</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line"><span class="comment">   &#125;</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line"><span class="comment">   */</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">13</span></pre></td><td class="code"><pre><span class="line">  <span class="keyword">const</span> qureyUrlParams = <span class="function"><span class="keyword">function</span> (<span class="params">str</span>) </span>&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">14</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">const</span> objStr = &#123;&#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">15</span></pre></td><td class="code"><pre><span class="line">    str &amp;&amp; str.split(<span class="string">'?'</span>)[<span class="number">1</span>].split(<span class="string">'&amp;'</span>).forEach(<span class="function"><span class="params">item</span> =&gt;</span> objStr[item.split(<span class="string">'='</span>)[<span class="number">0</span>]] = item.split(<span class="string">'='</span>)[<span class="number">1</span>]);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">16</span></pre></td><td class="code"><pre><span class="line">    <span class="keyword">return</span> objStr</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">17</span></pre></td><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">18</span></pre></td><td class="code"><pre><span class="line">  <span class="built_in">console</span>.log(qureyUrlParams(url));</span></pre></td></tr></table></figure><p>相信  以上面写的思路，大家都能看的非常明白</p><p>但是：小编觉得这不是最好的解决方案，最好的解决方案是用正则表达式来进行解析。</p><p>正则表达式   的解决方案   详见   小编的  正则表达式   里面的案例</p><p>如果能够帮助到你，是小编最大的荣幸</p><p>当然   有 不好的地方  请大家帮忙指出   学习永无止境    </p><p>小编一直认为  人外有人  天外有天    一起学习   共同进步</p><p>让我们共同加油吧！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h3&gt;&lt;p&gt;由于下面的代码用的是简写的方式  为了所有人都能看得懂   或者说即使看不懂   看到思路  根据思路也能实现、&lt;br&gt;所以写了以下的个人思
      
    
    </summary>
    
    
      <category term="javascript" scheme="http://www.blog.geyunjie.com/categories/javascript/"/>
    
    
      <category term="javascript" scheme="http://www.blog.geyunjie.com/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序登录验证</title>
    <link href="http://www.blog.geyunjie.com/2018/04/15/login-wx/"/>
    <id>http://www.blog.geyunjie.com/2018/04/15/login-wx/</id>
    <published>2018-04-15T00:54:07.000Z</published>
    <updated>2020-02-26T15:26:54.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h2><p>在说怎么做之前，先看下这个流程图</p><p><img src="./%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%99%BB%E5%BD%95%E9%AA%8C%E8%AF%81%E6%B5%81%E7%A8%8B.png" alt=""></p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>看完这个流程图 ，相必大家已经很清楚了。</p><p>为了防止大家不太明白，再次给大家聊一下流程图</p><ol><li>在授权之前，应该选判断是否已经授权。因为在别的地方已经授权了<ul><li>已授权：直接跳过授权的过程，进行本该进行的操作</li><li>未授权：进如以下流程进行授权</li></ul></li><li>获取用户信息。<ul><li>由于用户信息是隐私为题，需要征求用户的同意。所以，把这一步放到第二步，而不是第三步。</li><li>用户同意获取用户信息：获取用户系信息</li><li>用户不同意获取用户信息：终止以下操作，返回最开始授权之前的页面</li></ul></li><li>使用微信提供的API接口wx.login()，请求微信的服务器，获取code<ul><li>成功：返回code</li><li>失败：返回错误信息</li></ul></li><li>使用获取到的<strong>用户信息+code</strong>向公司的服务器发起获取<strong>Token</strong>的  接口  请求。服务器根据传递的数据进行判断<ul><li>请求成功：返回<strong>token</strong> 和请求成功的  状态信息等</li><li>请求失败：返回失败的  错误信息  比如：code不一致等（后端程序员编写具体的接口返回内容）</li></ul></li><li>当请求成功后，进行<strong>本地存储</strong>  ，并开始授权之前的操作<ul><li>使用微信小程序提供的API接口，进行本地存储</li><li>以后再有地方需要token的地方，就会直接从本地获取Token，而无需再次进行用户授权</li></ul></li></ol><p>   注意：部分文章可能会在不就的将来更新</p><p>  如果能够帮助到你，是小编最大的荣幸</p><p>  当然   有 不好的地方  请大家帮忙指出   学习永无止境    </p><p>  小编一直认为  人外有人  天外有天    一起学习   共同进步</p><p>  让我们共同加油吧！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;流程图&quot;&gt;&lt;a href=&quot;#流程图&quot; class=&quot;headerlink&quot; title=&quot;流程图&quot;&gt;&lt;/a&gt;流程图&lt;/h2&gt;&lt;p&gt;在说怎么做之前，先看下这个流程图&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7
      
    
    </summary>
    
    
      <category term="小程序" scheme="http://www.blog.geyunjie.com/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
      <category term="小程序" scheme="http://www.blog.geyunjie.com/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>前端规范</title>
    <link href="http://www.blog.geyunjie.com/2018/04/15/norm/"/>
    <id>http://www.blog.geyunjie.com/2018/04/15/norm/</id>
    <published>2018-04-15T00:54:07.000Z</published>
    <updated>2020-01-16T04:08:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前端规范"><a href="#前端规范" class="headerlink" title="前端规范"></a><strong>前端规范</strong></h1><ol><li>命名规则</li></ol><ul><li>头 : header</li><li>内容 : content/container</li><li>尾部 : footer</li><li>导航 : nav</li><li>侧栏 : sidebar</li><li>栏目 : column</li><li>外围盒子控制整体布局 : wrapper</li><li>左 右 中 : left / center / right</li><li>登录条 : loginbar</li><li>标志 : logo</li><li>广告 : banner</li><li>页面主题 : main</li><li>热点 : hot</li><li>新闻 : news</li><li>下载 : download</li><li>子导航 : subnav</li><li>菜单 : menu</li><li>子菜单 : submenu</li><li>搜索 : search</li><li>友情链接 : friendlink</li><li>页脚 : footer</li><li>版权 : copyright</li><li>滚动 : scroll</li><li>内容 : content</li><li>标签页 : tab</li><li>文章列表 : list</li><li>提示信息 : msg</li><li>小技巧 : tips</li><li>栏目标题 : title</li><li>加入 : joinus</li><li>指南 : guild</li><li>服务 : service</li><li>注册 : regsiter</li><li>状态 : status</li><li>投票 : vote</li><li>合作伙伴 : partner</li></ul><ol start="2"><li>注释的写法</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/*Footer Start*/</span></span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">内容区</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line"><span class="comment">/*Footer End*/</span></span></pre></td></tr></table></figure><ol start="3"><li><p>id的命名</p><p>3.1 页面结果</p><ul><li>容器 :  container </li><li>页头 : header</li><li>内容 : content / container </li><li>页面主体 : main </li><li>页尾 : footer </li><li>导航 : nav </li><li>侧栏 : sidebar </li><li>栏目 : column </li><li>页面外围控制整体布局宽度 : wrapper </li><li>左右中 : left / right / center</li></ul><p>3.2 导航</p><ul><li>导航 : nav </li><li>主导航 : mainbav </li><li>子导航 : subnav </li><li>顶导航 : topnav </li><li>边导航 : sidebar </li><li>左导航 : leftsidebar </li><li>右导航 : rightsidebar </li><li>菜单 : menu </li><li>子菜单 : submenu </li><li>标题 : title </li><li>摘要 : summary</li></ul><p>3.3 功能</p><ul><li>标志 : logo </li><li>广告 : banner </li><li>登陆 : login </li><li>登录条 : loginbar </li><li>注册 : regsiter </li><li>搜索 : search </li><li>功能区 : shop </li><li>标题 : title </li><li>加入 : joinus </li><li>状态 : status </li><li>按钮 : btn </li><li>滚动 : scroll </li><li>标签页 : tab </li><li>文章列表 : list </li><li>提示信息 : msg </li><li>当前的 : current </li><li>小技巧 : tips </li><li>图标 : icon </li><li>注释 : note </li><li>指南 : guild </li><li>服务 : service </li><li>热点 : hot </li><li>新闻 : news </li><li>下载 : download </li><li>投票 : vote </li><li>合作伙伴 : partner </li><li>友情链接 : link </li><li>版权 : copyright</li></ul></li><li><p>css样式</p><p>4.1 重置默认样式</p><p>4.2 添加自定义全局样式</p><p>4.3 抽取文件定义单页面全局样式</p><p>4.3 样式定义规则 ： 重定义 &gt; 伪类 &gt; 自定义 （便于阅读）</p></li><li><p>javascript 书写规范 </p><p>5.1 书写过程 ：每行代码结束结构统一（有无分号-&gt;有的话，每行代码都应该有-&gt; eslint 设置规则，遵守即可）。防止代码冗余 | 与不小心造成与远程代码造成冲突</p><p>5.2  库的引入 ：根据项目需求，尽量的少引入。引入的时候，尽量使用按需引入，节省资源</p><p>5.3 变量命名规则  ：驼峰式命名法 </p><p>5.4 类命名  : 首字母大写, 驼峰式命名</p><p>5.5 函数命名: 首字母小写驼峰式命名</p><p>5.6 命名语义化, 尽可能利用英文单词或其缩写</p><p>5.7 尽量避免使用存在兼容性及消耗资源的方法或属性, 比如eval() &amp;; innerText</p><p>5.8 后期优化中, JavaScript非注释类中文字符须转换成unicode编码使用, 以避免编码错误时乱码显示;</p><p>5.9 代码结构明了, 加适量注释. 提高函数重用率</p><p>5.10 注重 样式 结构 行为 相分离</p></li><li><p>图片规范</p><p>6.1 所有页面元素类图片均放入img文件夹</p><p>6.2 图片格式仅限于gif || png || jpg</p><p>6.3 命名全部用小写英文字母 || 数字 || _ 的组合,其中不得包含汉字 || 空格 || 特殊字符;尽量用易懂的词汇, 便于团队其他成员理解; 另, 命名分头尾两部分, 用下划线隔开, 比如ad_left01.gif || btn_submit.gif</p><p>6.4 在保证视觉效果的情况下选择最小的图片格式与图片质量, 以减少加载时间</p><p>6.5 尽量避免使用半透明的png图片(若使用, 请参考css规范相关说明)</p><p>6.6 运用css sprite技术集中小的背景图或图标, 减小页面http请求, 但注意, 请务必在对应的sprite psd源图中划参考线, 并保存至img目录下</p></li><li><p>注释规范 </p><p>7.1 html注释: 注释格式&lt; !–这儿是注释–&gt;, ‘–’只能在注释的始末位置,不可置入注释文字区域</p><p>7.2 css注释: 注释格式 /*这儿是注释*/</p><p>7.3 JavaScript注释, 单行注释使用’//这儿是单行注释’ ,多行注释使用 /* 这儿有多行注释 */</p></li><li><p>结束语</p></li></ol><p>如果能够帮助到你，是小编最大的荣幸</p><p>当然   有 不好的地方  请大家帮忙指出   学习永无止境    </p><p>小编一直认为  人外有人  天外有天    一起学习   共同进步</p><p>让我们共同加油吧！！！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前端规范&quot;&gt;&lt;a href=&quot;#前端规范&quot; class=&quot;headerlink&quot; title=&quot;前端规范&quot;&gt;&lt;/a&gt;&lt;strong&gt;前端规范&lt;/strong&gt;&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;命名规则&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;头 : header&lt;/li
      
    
    </summary>
    
    
      <category term="javascript" scheme="http://www.blog.geyunjie.com/categories/javascript/"/>
    
    
      <category term="javascript" scheme="http://www.blog.geyunjie.com/tags/javascript/"/>
    
  </entry>
  
</feed>
